(()=>{"use strict";var n,r,e,t,A={956:(n,r,e)=>{e.d(r,{A:()=>a});var t=e(354),A=e.n(t),o=e(314),i=e.n(o)()(A());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;500;600;700&display=swap);"]),i.push([n.id,'*,*::before,*::after{box-sizing:border-box;margin:0;padding:0}html,body{height:100%;font-family:"Josefin Sans",sans-serif}body{line-height:1.5;-webkit-font-smoothing:antialiased}img,picture,video,canvas,svg{display:block;max-width:100%}input,button,textarea,select{font:inherit}p,h1,h2,h3,h4,h5,h6{overflow-wrap:break-word}ul{list-style:none}a{color:initial}#root,#__next{isolation:isolate}',"",{version:3,sources:["webpack://./src/style/reset.css"],names:[],mappings:"AAGA,qBAGE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,UAEE,WAAA,CACA,qCAAA,CAGF,KACE,eAAA,CACA,kCAAA,CAGF,6BAKE,aAAA,CACA,cAAA,CAGF,6BAIE,YAAA,CAGF,oBAOE,wBAAA,CAGF,GACE,eAAA,CAGF,EAEE,aAAA,CAGF,cAEE,iBAAA",sourcesContent:["/* CSS resets */\r\n@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;500;600;700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  font-family: 'Josefin Sans', sans-serif;\r\n}\r\n\r\nbody {\r\n  line-height: 1.5;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\np,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  overflow-wrap: break-word;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\na {\r\n  /* text-decoration: none; */\r\n  color: initial;\r\n}\r\n\r\n#root,\r\n#__next {\r\n  isolation: isolate;\r\n}\r\n"],sourceRoot:""}]);const a=i},269:(n,r,e)=>{e.d(r,{A:()=>a});var t=e(354),A=e.n(t),o=e(314),i=e.n(o)()(A());i.push([n.id,'nav{display:flex;align-items:center;justify-content:space-between;width:100%;padding-inline:6rem;padding-block:2.4rem}nav .wrapper{display:flex;gap:2.4rem}main{display:grid;grid-template-columns:minmax(0, 3.5fr) minmax(0, 1.5fr);gap:1.2rem 2.4rem;padding-inline:6rem}main section{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:15px;padding:2.4rem}main .main{grid-row:span 3;display:flex;flex-direction:column;justify-content:space-between}.location{font-size:1.5rem;line-height:1.1}.location__name{font-weight:bold}.search-bar{position:relative;width:50ch}.search-bar i{position:absolute;top:50%;left:2em;translate:-50% -50%;cursor:pointer}.search-bar .error-message{position:absolute;top:50%;right:1.5em;translate:0% -50%;color:rgba(178,34,34,.747);text-align:right;pointer-events:none}.search-bar .error-message.hidden{display:none}.search-bar input{width:100%;height:100%;padding-inline:3.5em 2em;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:5em}.settings{position:relative;display:flex;align-items:center;justify-content:center;font-size:1.3rem;width:2.5em;aspect-ratio:1/1;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:50%;cursor:pointer}.settings i{transition:.3s}.settings .preferences{position:absolute;top:calc(100% + 10px);right:0%;display:none;gap:.7rem;flex-direction:column;width:10rem;padding:1.2rem;background:#fff;border-radius:10px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.settings .preferences::after{position:absolute;right:9%;top:-10px;content:"";width:0;border-left:10px solid rgba(0,0,0,0);border-right:10px solid rgba(0,0,0,0);border-bottom:10px solid #ccc}.settings .preferences .option{display:flex;align-items:center;gap:1rem}.settings .preferences .switch{position:relative;background:#ccc;border:.2em solid #ccc;border-radius:5em;width:2em;height:1em;isolation:isolate;cursor:pointer}.settings .preferences .switch .indicator{position:absolute;left:0;top:50%;width:50%;height:100%;border-radius:5em;background:#fff;transform-origin:0 50%;translate:100% -50%;transition:.2s}.settings .option:is([data-value=f],[data-value=mph]) .indicator{translate:0% -50%}.settings:hover i{rotate:90deg}.settings:hover .preferences{display:flex}.current{display:grid;grid-template-columns:max-content 1fr;gap:0 2.4rem;font-size:1rem}.current__icon{height:8em;object-fit:contain;grid-row:span 2}.current__temp{align-self:center;font-size:3.5em}.current__text{font-size:1.7em}.switch-forecast{display:flex;justify-content:space-around;background:#ccc;border:.4em solid #ccc;border-radius:5em;padding:.5em 0;width:9em;position:relative;isolation:isolate;cursor:pointer}.switch-forecast .indicator{position:absolute;left:0;top:50%;width:50%;height:100%;background:#fff;border-radius:5em;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transform-origin:0 50%;translate:100% -50%;transition:.2s}.switch-forecast .mode{text-align:center;width:50%;z-index:1}.forecast-list{position:relative;display:grid;grid-auto-flow:column;gap:1rem;overflow:scroll;padding:1em .5em}.forecast{font-size:1rem;position:relative;width:13em;padding:1em;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:10px;text-align:right}.forecast__temp{font-size:1.8em}.forecast__time{font-size:1em;position:absolute;right:1em;bottom:1em}.forecast__icon{position:relative;left:0;bottom:0}.additional{display:flex;align-items:center;gap:2.4rem;font-size:1.5rem}.additional__icon{font-size:1.5em;display:flex;align-items:center;justify-content:center}.additional__text{font-size:.7em}.additional__data{font-size:1.5em;font-weight:bold}.loading-screen{position:fixed;inset:0;display:none;align-items:center;justify-content:center;width:100%;height:100vh;background:rgba(255,255,255,.8666666667)}.loading-screen .circle{width:8rem;aspect-ratio:1;border-top:1rem solid #373535;border-left:1rem solid #a9a9a9;border-right:1rem solid #a9a9a9;border-bottom:1rem solid #a9a9a9;border-radius:50%}.loading-screen.active{display:flex}.loading-screen.active .circle{animation:spinning 1.5s infinite}@keyframes spinning{from{rotate:0deg}to{rotate:360deg}}',"",{version:3,sources:["webpack://./src/style/style.scss"],names:[],mappings:"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",sourcesContent:["$space-inline-section: 6rem;\r\n$space-block-section: calc($space-inline-section / 2.5);\r\n\r\nnav {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding-inline: $space-inline-section;\r\n  padding-block: $space-block-section;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    gap: $space-block-section;\r\n  }\r\n}\r\n\r\nmain {\r\n  display: grid;\r\n  grid-template-columns: minmax(0, 3.5fr) minmax(0, 1.5fr);\r\n  gap: calc($space-block-section / 2) $space-block-section;\r\n\r\n  padding-inline: $space-inline-section;\r\n\r\n  section {\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    border-radius: 15px;\r\n    padding: $space-block-section;\r\n  }\r\n\r\n  .main {\r\n    grid-row: span 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n\r\n// Navbar\r\n.location {\r\n  font-size: 1.5rem;\r\n  line-height: 1.1;\r\n\r\n  &__name {\r\n    font-weight: bold;\r\n  }\r\n\r\n  // &:has(.location__name:empty, .location__country:empty) {\r\n  //   width: 17rem;\r\n\r\n  //   .location__name,\r\n  //   .location__country {\r\n  //     display: block;\r\n  //     width: 100%;\r\n  //     height: 1em;\r\n  //     margin: 0.5em;\r\n\r\n  //     background: darkgray;\r\n  //     border-radius: 0.125em;\r\n  //   }\r\n\r\n  //   .location__country {\r\n  //     width: 80%;\r\n  //   }\r\n  // }\r\n}\r\n\r\n.search-bar {\r\n  position: relative;\r\n  width: 50ch;\r\n\r\n  i {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 2em;\r\n    translate: -50% -50%;\r\n\r\n    cursor: pointer;\r\n  }\r\n\r\n  .error-message {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 1.5em;\r\n    translate: 0% -50%;\r\n\r\n    color: rgba(178, 34, 34, 0.747);\r\n    text-align: right;\r\n\r\n    pointer-events: none;\r\n\r\n    &.hidden {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-inline: 3.5em 2em;\r\n\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    border-radius: 5em;\r\n  }\r\n}\r\n\r\n.settings {\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  font-size: 1.3rem;\r\n  width: 2.5em;\r\n  aspect-ratio: 1 / 1;\r\n\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 50%;\r\n\r\n  cursor: pointer;\r\n\r\n  i {\r\n    transition: 0.3s;\r\n  }\r\n\r\n  .preferences {\r\n    $triangle-height: 10px;\r\n\r\n    position: absolute;\r\n    top: calc(100% + $triangle-height);\r\n    right: 0%;\r\n\r\n    display: none;\r\n    gap: 0.7rem;\r\n    flex-direction: column;\r\n\r\n    width: 10rem;\r\n    padding: calc($space-block-section / 2);\r\n\r\n    background: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n\r\n    &::after {\r\n      position: absolute;\r\n      right: 9%;\r\n      top: calc(0px - $triangle-height);\r\n      content: '';\r\n      width: 0;\r\n      border-left: $triangle-height solid transparent;\r\n      border-right: $triangle-height solid transparent;\r\n      border-bottom: $triangle-height solid #ccc;\r\n    }\r\n\r\n    .option {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n    }\r\n\r\n    .switch {\r\n      position: relative;\r\n      background: #ccc;\r\n      border: 0.2em solid #ccc;\r\n      border-radius: 5em;\r\n\r\n      // padding: 0.5em 0;\r\n      width: 2em;\r\n      height: 1em;\r\n\r\n      isolation: isolate;\r\n\r\n      cursor: pointer;\r\n\r\n      .indicator {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n        width: 50%;\r\n        height: 100%;\r\n\r\n        border-radius: 5em;\r\n        background: white;\r\n\r\n        transform-origin: 0 50%;\r\n        translate: 100% -50%;\r\n        transition: 0.2s;\r\n      }\r\n    }\r\n  }\r\n\r\n  .option:is([data-value='f'], [data-value='mph']) {\r\n    .indicator {\r\n      translate: 0% -50%;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    i {\r\n      rotate: 90deg;\r\n    }\r\n\r\n    .preferences {\r\n      display: flex;\r\n    }\r\n  }\r\n}\r\n\r\n// Main\r\n.current {\r\n  display: grid;\r\n  grid-template-columns: max-content 1fr;\r\n  gap: 0 $space-block-section;\r\n  font-size: 1rem;\r\n\r\n  &__icon {\r\n    height: 8em;\r\n    object-fit: contain;\r\n    grid-row: span 2;\r\n  }\r\n\r\n  &__temp {\r\n    align-self: center;\r\n    font-size: 3.5em;\r\n  }\r\n\r\n  &__text {\r\n    font-size: 1.7em;\r\n  }\r\n}\r\n\r\n// Forecast\r\n.switch-forecast {\r\n  $bg: #ccc;\r\n\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  background: $bg;\r\n  border: 0.4em solid $bg;\r\n  border-radius: 5em;\r\n\r\n  padding: 0.5em 0;\r\n  width: 9em;\r\n\r\n  position: relative;\r\n  isolation: isolate;\r\n\r\n  cursor: pointer;\r\n\r\n  .indicator {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    background: white;\r\n    border-radius: 5em;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n    transform-origin: 0 50%;\r\n    translate: 100% -50%;\r\n    transition: 0.2s;\r\n  }\r\n\r\n  .mode {\r\n    text-align: center;\r\n    width: 50%;\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n.forecast-list {\r\n  position: relative;\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 1rem;\r\n  overflow: scroll;\r\n  padding: 1em 0.5em;\r\n}\r\n\r\n.forecast {\r\n  $space-forecast: 1em;\r\n  font-size: 1rem;\r\n\r\n  position: relative;\r\n  width: 13em;\r\n  padding: $space-forecast;\r\n\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 10px;\r\n  text-align: right;\r\n\r\n  &__temp {\r\n    font-size: 1.8em;\r\n  }\r\n\r\n  &__time {\r\n    font-size: 1em;\r\n    position: absolute;\r\n    right: $space-forecast;\r\n    bottom: $space-forecast;\r\n  }\r\n\r\n  &__icon {\r\n    position: relative;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n}\r\n\r\n// Additional\r\n.additional {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: $space-block-section;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  &__icon {\r\n    font-size: 1.5em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  &__text {\r\n    font-size: 0.7em;\r\n  }\r\n  &__data {\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n// Loading screen\r\n.loading-screen {\r\n  position: fixed;\r\n  inset: 0;\r\n\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #ffffffdd;\r\n\r\n  .circle {\r\n    $clr-bg-circle: darkgrey;\r\n    $clr-accent-circle: rgb(55, 53, 53);\r\n    width: 8rem;\r\n    aspect-ratio: 1;\r\n\r\n    border-top: 1rem solid $clr-accent-circle;\r\n    border-left: 1rem solid $clr-bg-circle;\r\n    border-right: 1rem solid $clr-bg-circle;\r\n    border-bottom: 1rem solid $clr-bg-circle;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  &.active {\r\n    display: flex;\r\n\r\n    .circle {\r\n      animation: spinning 1.5s infinite;\r\n    }\r\n\r\n    @keyframes spinning {\r\n      from {\r\n        rotate: 0deg;\r\n      }\r\n\r\n      to {\r\n        rotate: 360deg;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],sourceRoot:""}]);const a=i},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,A,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),r.push(l))}},r}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(A," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},365:(n,r,e)=>{var t=e(72),A=e.n(t),o=e(825),i=e.n(o),a=e(659),s=e.n(a),c=e(56),l=e.n(c),d=e(540),p=e.n(d),C=e(113),u=e.n(C),m=e(956),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),A()(m.A,f),m.A&&m.A.locals&&m.A.locals},10:(n,r,e)=>{var t=e(72),A=e.n(t),o=e(825),i=e.n(o),a=e(659),s=e.n(a),c=e(56),l=e.n(c),d=e(540),p=e.n(d),C=e(113),u=e.n(C),m=e(269),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),A()(m.A,f),m.A&&m.A.locals&&m.A.locals},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},i=[],a=0;a<n.length;a++){var s=n[a],c=t.base?s[0]+t.base:s[0],l=o[c]||0,d="".concat(c," ").concat(l);o[c]=l+1;var p=e(d),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(C);else{var u=A(C,t);t.byIndex=a,r.splice(a,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function A(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,A){var o=t(n=n||[],A=A||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var a=e(o[i]);r[a].references--}for(var s=t(n,A),c=0;c<o.length;c++){var l=e(o[c]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}o=s}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var A=void 0!==e.layer;A&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,A&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},44:(n,r,e)=>{e.a(n,(async(n,r)=>{try{var t=e(774);e(365),e(10);const A=document.querySelector(".search-input"),o=document.querySelector(".fa-magnifying-glass"),i=document.querySelector(".error-message"),a=document.querySelector(".switch-forecast"),s=document.querySelector(".preferences").querySelectorAll(".option");let c="";try{const d=await l();c=`${d.coords.latitude},${d.coords.longitude}`}catch{console.log("Unable to get location"),console.log("Wait for The Weather App fetching weather information from somewhere...")}async function l(){return new Promise(((n,r)=>navigator.geolocation.getCurrentPosition(n,r)))}t.H8(c),A.addEventListener("keydown",(n=>{if(i.classList.add("hidden"),"Enter"!==n.key)return;const r=a.dataset.forecastMode,e=n.currentTarget.value;t.H8(e,r)})),o.addEventListener("click",(()=>{const n=a.dataset.forecastMode,r=A.value;t.H8(r,n)})),a.addEventListener("click",(n=>{const r=n.currentTarget.dataset.forecastMode;t.K(r)})),s.forEach((n=>{n.addEventListener("click",(()=>{const r=n.dataset.name,e=n.dataset.value,A=a.dataset.forecastMode;t.j$(r,e,A)}))})),r()}catch(p){r(p)}}),1)},774:(n,r,e)=>{e.d(r,{H8:()=>b,K:()=>y,j$:()=>x});const t=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],A=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function o(n,r,e){return`\n    <li class="forecast">\n      <p class="forecast__temp">${n}</p>\n      <p class="forecast__time">${r}</p>\n      <img class="forecast__icon" src="${e}" />\n    </li>\n  `}function i(n,r){const e=document.querySelector(".current");e.querySelector(".current__icon").src=n.icon;const t=e.querySelector(".current__temp");"f"===r[0]?t.textContent=`${n.temp_f} °F`:"c"===r[0]&&(t.textContent=`${n.temp_c} °C`),e.querySelector(".current__text").textContent=n.text}function a(n,r){document.querySelector(".additional__data.humidity").textContent=`${n.humidity}%`,document.querySelector(".additional__data.uv").textContent=n.uv;const e=document.querySelector(".additional__data.wind-speed");"kph"===r[1]?e.textContent=`${n.wind_kph} km/h`:"mph"===r[1]&&(e.textContent=`${n.wind_mph} mph`)}function s(n,r){const e=document.querySelector(".forecast-list");e.innerHTML="",n.forEach((n=>{const A=o("c"===r[0]?`${n.temp_c} °C`:`${n.temp_f} °F`,t[new Date(n.date).getDay()],n.icon);e.innerHTML+=A}))}function c(n,r){const e=document.querySelector(".forecast-list");e.innerHTML="",n.forEach((n=>{const t=o("c"===r[0]?`${n.temp_c} °C`:`${n.temp_f} °F`,n.hour+":00",n.icon);e.innerHTML+=t}))}function l(n){const r=document.querySelector(".switch-forecast"),e=r.querySelector(".indicator");"hourly"===n?(r.dataset.forecastMode="hourly",e.style.translate="100% -50%"):"daily"===n&&(r.dataset.forecastMode="daily",e.style.translate="0% -50%")}function d(n){const r=document.querySelector(".preferences").querySelectorAll(".option"),e={c:"C",f:"F",kph:"Km/h",mph:"Mph"};for(let t=0;t<n.length;t++)r[t].dataset.value=n[t],r[t].querySelector(".unit").textContent=e[n[t]]}const p="5746854e984c4eaaa0544917231409",C="http://api.weatherapi.com/v1",u="forecast.json",m=JSON.parse(localStorage.getItem("prefUnits"))||["f","mph"];let f,g="hourly",h="Saigon";async function b(n,r){try{n||(n=h),r||(r=g),document.querySelector(".loading-screen").classList.add("active"),await async function(n){f=await async function(n,r="5"){const e=`${C}/${u}?key=${p}&q=${n}&days=${r}`,t=await fetch(e),A=await t.json(),{location:o}=A,i=A.current;console.log(A.current);const a={temp_c:i.temp_c,temp_f:i.temp_f,text:i.condition.text,icon:i.condition.icon,humidity:i.humidity,uv:i.uv,wind_kph:i.wind_kph,wind_mph:i.wind_mph},s=A.forecast.forecastday,c=[];s.forEach((n=>{const r={date:n.date,icon:n.day.condition.icon,temp_c:n.day.avgtemp_c,temp_f:n.day.avgtemp_f};c.push(r)}));const l=[];for(let n=1;n<=24;n++){let r=parseInt(new Date(o.localtime).getHours())+n,e=!1;r>23&&(r-=24,e=!0);const t=s[e?1:0].hour[r],A={hour:new Date(t.time).getHours(),is_day:t.is_day,icon:t.condition.icon,temp_c:t.temp_c,temp_f:t.temp_f};l.push(A)}return{location:o,current:a,dailyForecast:c,hourlyForecast:l}}(n)}(n),function(){const n=document.querySelector(".error-message");n.textContent="",n.classList.add("hidden")}(),function(n){const r=document.querySelector(".location");r.querySelector(".location__name").textContent=n.name,r.querySelector(".location__country").textContent=", "+n.country;const e=r.querySelector(".location__localtime"),o=new Date(n.localtime);e.textContent=`${t[o.getDay()]}, ${o.getDate()} ${A[o.getMonth()]} ${o.getFullYear()}`}(f.location),d(m),i(f.current,m),a(f.current,m),"hourly"===r?c(f.hourlyForecast,m):"daily"===r&&s(f.dailyForecast,m),l(r)}catch{!function(n){const r=document.querySelector(".error-message");r.textContent="Location not found",r.classList.remove("hidden")}()}document.querySelector(".loading-screen").classList.remove("active"),document.querySelector(".search-input").value=""}function y(n){const r="daily"===n?"hourly":"daily";"hourly"===r?c(f.hourlyForecast,m):"daily"===r&&s(f.dailyForecast,m),l(r)}function x(n,r,e){switch(n){case"temp":m[0]="c"===r?"f":"c";break;case"vel":m[1]="kph"===r?"mph":"kph"}d(m),i(f.current,m),a(f.current,m),"hourly"===e?c(f.hourlyForecast,m):"daily"===e&&s(f.dailyForecast,m),localStorage.setItem("prefUnits",JSON.stringify(m))}}},o={};function i(n){var r=o[n];if(void 0!==r)return r.exports;var e=o[n]={id:n,exports:{}};return A[n](e,e.exports,i),e.exports}n="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",r="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",e="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",t=n=>{n&&n.d<1&&(n.d=1,n.forEach((n=>n.r--)),n.forEach((n=>n.r--?n.r++:n())))},i.a=(A,o,i)=>{var a;i&&((a=[]).d=-1);var s,c,l,d=new Set,p=A.exports,C=new Promise(((n,r)=>{l=r,c=n}));C[r]=p,C[n]=n=>(a&&n(a),d.forEach(n),C.catch((n=>{}))),A.exports=C,o((A=>{var o;s=(A=>A.map((A=>{if(null!==A&&"object"==typeof A){if(A[n])return A;if(A.then){var o=[];o.d=0,A.then((n=>{i[r]=n,t(o)}),(n=>{i[e]=n,t(o)}));var i={};return i[n]=n=>n(o),i}}var a={};return a[n]=n=>{},a[r]=A,a})))(A);var i=()=>s.map((n=>{if(n[e])throw n[e];return n[r]})),c=new Promise((r=>{(o=()=>r(i)).r=0;var e=n=>n!==a&&!d.has(n)&&(d.add(n),n&&!n.d&&(o.r++,n.push(o)));s.map((r=>r[n](e)))}));return o.r?c:i()}),(n=>(n?l(C[e]=n):c(p),t(a)))),a&&a.d<0&&(a.d=0)},i.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return i.d(r,{a:r}),r},i.d=(n,r)=>{for(var e in r)i.o(r,e)&&!i.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},i.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),i.nc=void 0,i(44)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,