(()=>{"use strict";var n,r,e,t,A={956:(n,r,e)=>{e.d(r,{A:()=>a});var t=e(354),A=e.n(t),o=e(314),i=e.n(o)()(A());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;500;600;700&display=swap);"]),i.push([n.id,'*,*::before,*::after{box-sizing:border-box;margin:0;padding:0}html,body{height:100%;font-family:"Josefin Sans",sans-serif}body{line-height:1.5;-webkit-font-smoothing:antialiased}img,picture,video,canvas,svg{display:block;max-width:100%}input,button,textarea,select{font:inherit}p,h1,h2,h3,h4,h5,h6{overflow-wrap:break-word}ul{list-style:none}a{color:initial}#root,#__next{isolation:isolate}',"",{version:3,sources:["webpack://./src/style/reset.css"],names:[],mappings:"AAGA,qBAGE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,UAEE,WAAA,CACA,qCAAA,CAGF,KACE,eAAA,CACA,kCAAA,CAGF,6BAKE,aAAA,CACA,cAAA,CAGF,6BAIE,YAAA,CAGF,oBAOE,wBAAA,CAGF,GACE,eAAA,CAGF,EAEE,aAAA,CAGF,cAEE,iBAAA",sourcesContent:["/* CSS resets */\r\n@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;500;600;700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  font-family: 'Josefin Sans', sans-serif;\r\n}\r\n\r\nbody {\r\n  line-height: 1.5;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\np,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  overflow-wrap: break-word;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\na {\r\n  /* text-decoration: none; */\r\n  color: initial;\r\n}\r\n\r\n#root,\r\n#__next {\r\n  isolation: isolate;\r\n}\r\n"],sourceRoot:""}]);const a=i},269:(n,r,e)=>{e.d(r,{A:()=>a});var t=e(354),A=e.n(t),o=e(314),i=e.n(o)()(A());i.push([n.id,'nav{display:flex;align-items:center;justify-content:space-between;width:100%;padding-inline:6rem;padding-block:2.4rem}nav .wrapper{display:flex;gap:2.4rem}main{display:grid;grid-template-columns:minmax(0, 3.5fr) minmax(0, 1.5fr);gap:1.2rem 2.4rem;padding-inline:6rem}main section{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:15px;padding:2.4rem}main .main{grid-row:span 3;display:flex;flex-direction:column;justify-content:space-between}.location{font-size:1.5rem;line-height:1.1}.location__name{font-weight:bold}.search-bar{position:relative;width:50ch}.search-bar i{position:absolute;top:50%;left:2em;translate:-50% -50%;cursor:pointer}.search-bar .error-message{position:absolute;top:50%;right:1.5em;translate:0% -50%;color:rgba(178,34,34,.747);text-align:right;pointer-events:none}.search-bar .error-message.hidden{display:none}.search-bar input{width:100%;height:100%;padding-inline:3.5em 2em;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:5em}.settings{position:relative;display:flex;align-items:center;justify-content:center;font-size:1.3rem;width:2.5em;aspect-ratio:1/1;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:50%;cursor:pointer}.settings i{transition:.3s}.settings .preferences{position:absolute;top:calc(100% + 10px);right:0%;display:none;gap:.7rem;flex-direction:column;width:10rem;padding:1.2rem;background:#fff;border-radius:10px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.settings .preferences::after{position:absolute;right:9%;top:-10px;content:"";width:0;border-left:10px solid rgba(0,0,0,0);border-right:10px solid rgba(0,0,0,0);border-bottom:10px solid #ccc}.settings .preferences .option{display:flex;align-items:center;gap:1rem}.settings .preferences .switch{position:relative;background:#ccc;border:.2em solid #ccc;border-radius:5em;width:2em;height:1em;isolation:isolate;cursor:pointer}.settings .preferences .switch .indicator{position:absolute;left:0;top:50%;width:50%;height:100%;border-radius:5em;background:#fff;transform-origin:0 50%;translate:100% -50%;transition:.2s}.settings .option:is([data-value=f],[data-value=mph]) .indicator{translate:0% -50%}.settings:hover i{rotate:90deg}.settings:hover .preferences{display:flex}.current{display:grid;grid-template-columns:max-content 1fr;gap:0 2.4rem;font-size:1rem}.current__icon{height:8em;object-fit:contain;grid-row:span 2}.current__temp{align-self:center;font-size:3.5em}.current__text{font-size:1.7em}.switch-forecast{display:flex;justify-content:space-around;background:#ccc;border:.4em solid #ccc;border-radius:5em;padding:.5em 0;width:9em;position:relative;isolation:isolate;cursor:pointer}.switch-forecast .indicator{position:absolute;left:0;top:50%;width:50%;height:100%;background:#fff;border-radius:5em;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transform-origin:0 50%;translate:100% -50%;transition:.2s}.switch-forecast .mode{text-align:center;width:50%;z-index:1}.forecast-list{position:relative;display:grid;grid-auto-flow:column;gap:1rem;overflow:scroll;padding:1em .5em}.forecast{font-size:1rem;position:relative;width:13em;padding:1em;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);border-radius:10px;text-align:right}.forecast__temp{font-size:1.8em}.forecast__time{font-size:1em;position:absolute;right:1em;bottom:1em}.forecast__icon{position:relative;left:0;bottom:0}.additional{display:flex;align-items:center;gap:2.4rem;font-size:1.5rem}.additional__icon{font-size:1.5em;display:flex;align-items:center;justify-content:center}.additional__text{font-size:.7em}.additional__data{font-size:1.5em;font-weight:bold}.loading-screen{position:fixed;inset:0;display:none;flex-direction:column;gap:1rem;align-items:center;justify-content:center;width:100%;height:100vh;background:rgba(255,255,255,.8666666667)}.loading-screen .circle{width:8rem;aspect-ratio:1;border-top:1rem solid #373535;border-left:1rem solid #a9a9a9;border-right:1rem solid #a9a9a9;border-bottom:1rem solid #a9a9a9;border-radius:50%}.loading-screen.active{display:flex}.loading-screen.active .circle{animation:spinning 1.5s infinite}@keyframes spinning{from{rotate:0deg}to{rotate:360deg}}',"",{version:3,sources:["webpack://./src/style/style.scss"],names:[],mappings:"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",sourcesContent:["$space-inline-section: 6rem;\r\n$space-block-section: calc($space-inline-section / 2.5);\r\n\r\nnav {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding-inline: $space-inline-section;\r\n  padding-block: $space-block-section;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    gap: $space-block-section;\r\n  }\r\n}\r\n\r\nmain {\r\n  display: grid;\r\n  grid-template-columns: minmax(0, 3.5fr) minmax(0, 1.5fr);\r\n  gap: calc($space-block-section / 2) $space-block-section;\r\n\r\n  padding-inline: $space-inline-section;\r\n\r\n  section {\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    border-radius: 15px;\r\n    padding: $space-block-section;\r\n  }\r\n\r\n  .main {\r\n    grid-row: span 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n\r\n// Navbar\r\n.location {\r\n  font-size: 1.5rem;\r\n  line-height: 1.1;\r\n\r\n  &__name {\r\n    font-weight: bold;\r\n  }\r\n\r\n  // &:has(.location__name:empty, .location__country:empty) {\r\n  //   width: 17rem;\r\n\r\n  //   .location__name,\r\n  //   .location__country {\r\n  //     display: block;\r\n  //     width: 100%;\r\n  //     height: 1em;\r\n  //     margin: 0.5em;\r\n\r\n  //     background: darkgray;\r\n  //     border-radius: 0.125em;\r\n  //   }\r\n\r\n  //   .location__country {\r\n  //     width: 80%;\r\n  //   }\r\n  // }\r\n}\r\n\r\n.search-bar {\r\n  position: relative;\r\n  width: 50ch;\r\n\r\n  i {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 2em;\r\n    translate: -50% -50%;\r\n\r\n    cursor: pointer;\r\n  }\r\n\r\n  .error-message {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 1.5em;\r\n    translate: 0% -50%;\r\n\r\n    color: rgba(178, 34, 34, 0.747);\r\n    text-align: right;\r\n\r\n    pointer-events: none;\r\n\r\n    &.hidden {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding-inline: 3.5em 2em;\r\n\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    border-radius: 5em;\r\n  }\r\n}\r\n\r\n.settings {\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  font-size: 1.3rem;\r\n  width: 2.5em;\r\n  aspect-ratio: 1 / 1;\r\n\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 50%;\r\n\r\n  cursor: pointer;\r\n\r\n  i {\r\n    transition: 0.3s;\r\n  }\r\n\r\n  .preferences {\r\n    $triangle-height: 10px;\r\n\r\n    position: absolute;\r\n    top: calc(100% + $triangle-height);\r\n    right: 0%;\r\n\r\n    display: none;\r\n    gap: 0.7rem;\r\n    flex-direction: column;\r\n\r\n    width: 10rem;\r\n    padding: calc($space-block-section / 2);\r\n\r\n    background: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n\r\n    &::after {\r\n      position: absolute;\r\n      right: 9%;\r\n      top: calc(0px - $triangle-height);\r\n      content: '';\r\n      width: 0;\r\n      border-left: $triangle-height solid transparent;\r\n      border-right: $triangle-height solid transparent;\r\n      border-bottom: $triangle-height solid #ccc;\r\n    }\r\n\r\n    .option {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n    }\r\n\r\n    .switch {\r\n      position: relative;\r\n      background: #ccc;\r\n      border: 0.2em solid #ccc;\r\n      border-radius: 5em;\r\n\r\n      // padding: 0.5em 0;\r\n      width: 2em;\r\n      height: 1em;\r\n\r\n      isolation: isolate;\r\n\r\n      cursor: pointer;\r\n\r\n      .indicator {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n        width: 50%;\r\n        height: 100%;\r\n\r\n        border-radius: 5em;\r\n        background: white;\r\n\r\n        transform-origin: 0 50%;\r\n        translate: 100% -50%;\r\n        transition: 0.2s;\r\n      }\r\n    }\r\n  }\r\n\r\n  .option:is([data-value='f'], [data-value='mph']) {\r\n    .indicator {\r\n      translate: 0% -50%;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    i {\r\n      rotate: 90deg;\r\n    }\r\n\r\n    .preferences {\r\n      display: flex;\r\n    }\r\n  }\r\n}\r\n\r\n// Main\r\n.current {\r\n  display: grid;\r\n  grid-template-columns: max-content 1fr;\r\n  gap: 0 $space-block-section;\r\n  font-size: 1rem;\r\n\r\n  &__icon {\r\n    height: 8em;\r\n    object-fit: contain;\r\n    grid-row: span 2;\r\n  }\r\n\r\n  &__temp {\r\n    align-self: center;\r\n    font-size: 3.5em;\r\n  }\r\n\r\n  &__text {\r\n    font-size: 1.7em;\r\n  }\r\n}\r\n\r\n// Forecast\r\n.switch-forecast {\r\n  $bg: #ccc;\r\n\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  background: $bg;\r\n  border: 0.4em solid $bg;\r\n  border-radius: 5em;\r\n\r\n  padding: 0.5em 0;\r\n  width: 9em;\r\n\r\n  position: relative;\r\n  isolation: isolate;\r\n\r\n  cursor: pointer;\r\n\r\n  .indicator {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    width: 50%;\r\n    height: 100%;\r\n\r\n    background: white;\r\n    border-radius: 5em;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n    transform-origin: 0 50%;\r\n    translate: 100% -50%;\r\n    transition: 0.2s;\r\n  }\r\n\r\n  .mode {\r\n    text-align: center;\r\n    width: 50%;\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n.forecast-list {\r\n  position: relative;\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: 1rem;\r\n  overflow: scroll;\r\n  padding: 1em 0.5em;\r\n}\r\n\r\n.forecast {\r\n  $space-forecast: 1em;\r\n  font-size: 1rem;\r\n\r\n  position: relative;\r\n  width: 13em;\r\n  padding: $space-forecast;\r\n\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 10px;\r\n  text-align: right;\r\n\r\n  &__temp {\r\n    font-size: 1.8em;\r\n  }\r\n\r\n  &__time {\r\n    font-size: 1em;\r\n    position: absolute;\r\n    right: $space-forecast;\r\n    bottom: $space-forecast;\r\n  }\r\n\r\n  &__icon {\r\n    position: relative;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n}\r\n\r\n// Additional\r\n.additional {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: $space-block-section;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  &__icon {\r\n    font-size: 1.5em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  &__text {\r\n    font-size: 0.7em;\r\n  }\r\n  &__data {\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n// Loading screen\r\n.loading-screen {\r\n  position: fixed;\r\n  inset: 0;\r\n\r\n  display: none;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #ffffffdd;\r\n\r\n  .circle {\r\n    $clr-bg-circle: darkgrey;\r\n    $clr-accent-circle: rgb(55, 53, 53);\r\n    width: 8rem;\r\n    aspect-ratio: 1;\r\n\r\n    border-top: 1rem solid $clr-accent-circle;\r\n    border-left: 1rem solid $clr-bg-circle;\r\n    border-right: 1rem solid $clr-bg-circle;\r\n    border-bottom: 1rem solid $clr-bg-circle;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  &.active {\r\n    display: flex;\r\n\r\n    .circle {\r\n      animation: spinning 1.5s infinite;\r\n    }\r\n\r\n    @keyframes spinning {\r\n      from {\r\n        rotate: 0deg;\r\n      }\r\n\r\n      to {\r\n        rotate: 360deg;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],sourceRoot:""}]);const a=i},314:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,A,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),r.push(l))}},r}},354:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(A," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},365:(n,r,e)=>{var t=e(72),A=e.n(t),o=e(825),i=e.n(o),a=e(659),s=e.n(a),c=e(56),l=e.n(c),d=e(540),p=e.n(d),C=e(113),u=e.n(C),m=e(956),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),A()(m.A,f),m.A&&m.A.locals&&m.A.locals},10:(n,r,e)=>{var t=e(72),A=e.n(t),o=e(825),i=e.n(o),a=e(659),s=e.n(a),c=e(56),l=e.n(c),d=e(540),p=e.n(d),C=e(113),u=e.n(C),m=e(269),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),A()(m.A,f),m.A&&m.A.locals&&m.A.locals},72:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},i=[],a=0;a<n.length;a++){var s=n[a],c=t.base?s[0]+t.base:s[0],l=o[c]||0,d="".concat(c," ").concat(l);o[c]=l+1;var p=e(d),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(C);else{var u=A(C,t);t.byIndex=a,r.splice(a,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function A(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,A){var o=t(n=n||[],A=A||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var a=e(o[i]);r[a].references--}for(var s=t(n,A),c=0;c<o.length;c++){var l=e(o[c]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}o=s}}},659:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},56:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var A=void 0!==e.layer;A&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,A&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},113:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},44:(n,r,e)=>{e.a(n,(async(n,r)=>{try{var t=e(774);e(365),e(10);const A=document.querySelector(".search-input"),o=document.querySelector(".fa-magnifying-glass"),i=document.querySelector(".error-message"),a=document.querySelector(".switch-forecast"),s=document.querySelector(".preferences").querySelectorAll(".option");let c="";try{const d=await l();c=`${d.coords.latitude},${d.coords.longitude}`}catch{console.log("Unable to get location"),console.log("Wait for The Weather App fetching weather information from somewhere...")}async function l(){return new Promise(((n,r)=>navigator.geolocation.getCurrentPosition(n,r)))}t.H8(c),A.addEventListener("keydown",(n=>{if(i.classList.add("hidden"),"Enter"!==n.key)return;const r=a.dataset.forecastMode,e=n.currentTarget.value;t.H8(e,r)})),o.addEventListener("click",(()=>{const n=a.dataset.forecastMode,r=A.value;t.H8(r,n)})),a.addEventListener("click",(n=>{const r=n.currentTarget.dataset.forecastMode;t.K(r)})),s.forEach((n=>{n.addEventListener("click",(()=>{const r=n.dataset.name,e=n.dataset.value,A=a.dataset.forecastMode;t.j$(r,e,A)}))})),r()}catch(p){r(p)}}),1)},774:(n,r,e)=>{e.d(r,{H8:()=>b,K:()=>y,j$:()=>x});const t=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],A=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function o(n,r,e){return`\n    <li class="forecast">\n      <p class="forecast__temp">${n}</p>\n      <p class="forecast__time">${r}</p>\n      <img class="forecast__icon" src="${e}" />\n    </li>\n  `}function i(n,r){const e=document.querySelector(".current");e.querySelector(".current__icon").src=n.icon;const t=e.querySelector(".current__temp");"f"===r[0]?t.textContent=`${n.temp_f} °F`:"c"===r[0]&&(t.textContent=`${n.temp_c} °C`),e.querySelector(".current__text").textContent=n.text}function a(n,r){document.querySelector(".additional__data.humidity").textContent=`${n.humidity}%`,document.querySelector(".additional__data.uv").textContent=n.uv;const e=document.querySelector(".additional__data.wind-speed");"kph"===r[1]?e.textContent=`${n.wind_kph} km/h`:"mph"===r[1]&&(e.textContent=`${n.wind_mph} mph`)}function s(n,r){const e=document.querySelector(".forecast-list");e.innerHTML="",n.forEach((n=>{const A=o("c"===r[0]?`${n.temp_c} °C`:`${n.temp_f} °F`,t[new Date(n.date).getDay()],n.icon);e.innerHTML+=A}))}function c(n,r){const e=document.querySelector(".forecast-list");e.innerHTML="",n.forEach((n=>{const t=o("c"===r[0]?`${n.temp_c} °C`:`${n.temp_f} °F`,n.hour+":00",n.icon);e.innerHTML+=t}))}function l(n){const r=document.querySelector(".switch-forecast"),e=r.querySelector(".indicator");"hourly"===n?(r.dataset.forecastMode="hourly",e.style.translate="100% -50%"):"daily"===n&&(r.dataset.forecastMode="daily",e.style.translate="0% -50%")}function d(n){const r=document.querySelector(".preferences").querySelectorAll(".option"),e={c:"C",f:"F",kph:"Km/h",mph:"Mph"};for(let t=0;t<n.length;t++)r[t].dataset.value=n[t],r[t].querySelector(".unit").textContent=e[n[t]]}const p="5746854e984c4eaaa0544917231409",C="https://api.weatherapi.com/v1",u="forecast.json",m=JSON.parse(localStorage.getItem("prefUnits"))||["f","mph"];let f,g="hourly",h="Saigon";async function b(n,r){try{n||(n=h),r||(r=g),document.querySelector(".loading-screen").classList.add("active"),await async function(n){f=await async function(n,r="5"){const e=`${C}/${u}?key=${p}&q=${n}&days=${r}`,t=await fetch(e),A=await t.json(),{location:o}=A,i=A.current,a={temp_c:i.temp_c,temp_f:i.temp_f,text:i.condition.text,icon:i.condition.icon,humidity:i.humidity,uv:i.uv,wind_kph:i.wind_kph,wind_mph:i.wind_mph},s=A.forecast.forecastday,c=[];s.forEach((n=>{const r={date:n.date,icon:n.day.condition.icon,temp_c:n.day.avgtemp_c,temp_f:n.day.avgtemp_f};c.push(r)}));const l=[];for(let n=1;n<=24;n++){let r=parseInt(new Date(o.localtime).getHours())+n,e=!1;r>23&&(r-=24,e=!0);const t=s[e?1:0].hour[r],A={hour:new Date(t.time).getHours(),is_day:t.is_day,icon:t.condition.icon,temp_c:t.temp_c,temp_f:t.temp_f};l.push(A)}return{location:o,current:a,dailyForecast:c,hourlyForecast:l}}(n)}(n),function(){const n=document.querySelector(".error-message");n.textContent="",n.classList.add("hidden")}(),function(n){const r=document.querySelector(".location");r.querySelector(".location__name").textContent=n.name,r.querySelector(".location__country").textContent=", "+n.country;const e=r.querySelector(".location__localtime"),o=new Date(n.localtime);e.textContent=`${t[o.getDay()]}, ${o.getDate()} ${A[o.getMonth()]} ${o.getFullYear()}`}(f.location),d(m),i(f.current,m),a(f.current,m),"hourly"===r?c(f.hourlyForecast,m):"daily"===r&&s(f.dailyForecast,m),l(r)}catch{!function(n){const r=document.querySelector(".error-message");r.textContent="Location not found",r.classList.remove("hidden")}()}document.querySelector(".loading-screen").classList.remove("active"),document.querySelector(".search-input").value=""}function y(n){const r="daily"===n?"hourly":"daily";"hourly"===r?c(f.hourlyForecast,m):"daily"===r&&s(f.dailyForecast,m),l(r)}function x(n,r,e){switch(n){case"temp":m[0]="c"===r?"f":"c";break;case"vel":m[1]="kph"===r?"mph":"kph"}d(m),i(f.current,m),a(f.current,m),"hourly"===e?c(f.hourlyForecast,m):"daily"===e&&s(f.dailyForecast,m),localStorage.setItem("prefUnits",JSON.stringify(m))}}},o={};function i(n){var r=o[n];if(void 0!==r)return r.exports;var e=o[n]={id:n,exports:{}};return A[n](e,e.exports,i),e.exports}n="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",r="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",e="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",t=n=>{n&&n.d<1&&(n.d=1,n.forEach((n=>n.r--)),n.forEach((n=>n.r--?n.r++:n())))},i.a=(A,o,i)=>{var a;i&&((a=[]).d=-1);var s,c,l,d=new Set,p=A.exports,C=new Promise(((n,r)=>{l=r,c=n}));C[r]=p,C[n]=n=>(a&&n(a),d.forEach(n),C.catch((n=>{}))),A.exports=C,o((A=>{var o;s=(A=>A.map((A=>{if(null!==A&&"object"==typeof A){if(A[n])return A;if(A.then){var o=[];o.d=0,A.then((n=>{i[r]=n,t(o)}),(n=>{i[e]=n,t(o)}));var i={};return i[n]=n=>n(o),i}}var a={};return a[n]=n=>{},a[r]=A,a})))(A);var i=()=>s.map((n=>{if(n[e])throw n[e];return n[r]})),c=new Promise((r=>{(o=()=>r(i)).r=0;var e=n=>n!==a&&!d.has(n)&&(d.add(n),n&&!n.d&&(o.r++,n.push(o)));s.map((r=>r[n](e)))}));return o.r?c:i()}),(n=>(n?l(C[e]=n):c(p),t(a)))),a&&a.d<0&&(a.d=0)},i.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return i.d(r,{a:r}),r},i.d=(n,r)=>{for(var e in r)i.o(r,e)&&!i.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},i.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),i.nc=void 0,i(44)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVNtUCxLQUNqQyxJQUFJLElBQUk5SCxLQUFPOEgsRUFDWGhDLEVBQW9CaUMsRUFBRUQsRUFBWTlILEtBQVM4RixFQUFvQmlDLEVBQUVwUCxFQUFTcUgsSUFDNUVnSSxPQUFPQyxlQUFldFAsRUFBU3FILEVBQUssQ0FBRWtJLFlBQVksRUFBTUMsSUFBS0wsRUFBVzlILElBRTFFLEVDTkQ4RixFQUFvQmlDLEVBQUksQ0FBQ3BNLEVBQUt5TSxJQUFVSixPQUFPSyxVQUFVQyxlQUFlQyxLQUFLNU0sRUFBS3lNLEdDQWxGdEMsRUFBb0IwQyxRQUFLM08sRUNHQ2lNLEVBQW9CLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvd2VicGFjay9ydW50aW1lL2FzeW5jIG1vZHVsZSIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvLi9zcmMvc3R5bGUvcmVzZXQuY3NzIiwid2VicGFjazovL3Byb2plY3Rfd2VhdGhlci8uL3NyYy9zdHlsZS9zdHlsZS5zY3NzIiwid2VicGFjazovL3Byb2plY3Rfd2VhdGhlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyLy4vc3JjL3N0eWxlL3Jlc2V0LmNzcz9kYzI1Iiwid2VicGFjazovL3Byb2plY3Rfd2VhdGhlci8uL3NyYy9zdHlsZS9zdHlsZS5zY3NzPzc0N2UiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3Byb2plY3Rfd2VhdGhlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3Byb2plY3Rfd2VhdGhlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyLy4vc3JjL2pzL2Rpc3BsYXlGdW5jdGlvbnMuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyLy4vc3JjL2pzL2FwaUZ1bmN0aW9ucy5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvLi9zcmMvanMvY29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3Byb2plY3Rfd2VhdGhlci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vcHJvamVjdF93ZWF0aGVyL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9wcm9qZWN0X3dlYXRoZXIvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB3ZWJwYWNrUXVldWVzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sKFwid2VicGFjayBxdWV1ZXNcIikgOiBcIl9fd2VicGFja19xdWV1ZXNfX1wiO1xudmFyIHdlYnBhY2tFeHBvcnRzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sKFwid2VicGFjayBleHBvcnRzXCIpIDogXCJfX3dlYnBhY2tfZXhwb3J0c19fXCI7XG52YXIgd2VicGFja0Vycm9yID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sKFwid2VicGFjayBlcnJvclwiKSA6IFwiX193ZWJwYWNrX2Vycm9yX19cIjtcbnZhciByZXNvbHZlUXVldWUgPSAocXVldWUpID0+IHtcblx0aWYocXVldWUgJiYgcXVldWUuZCA8IDEpIHtcblx0XHRxdWV1ZS5kID0gMTtcblx0XHRxdWV1ZS5mb3JFYWNoKChmbikgPT4gKGZuLnItLSkpO1xuXHRcdHF1ZXVlLmZvckVhY2goKGZuKSA9PiAoZm4uci0tID8gZm4ucisrIDogZm4oKSkpO1xuXHR9XG59XG52YXIgd3JhcERlcHMgPSAoZGVwcykgPT4gKGRlcHMubWFwKChkZXApID0+IHtcblx0aWYoZGVwICE9PSBudWxsICYmIHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIpIHtcblx0XHRpZihkZXBbd2VicGFja1F1ZXVlc10pIHJldHVybiBkZXA7XG5cdFx0aWYoZGVwLnRoZW4pIHtcblx0XHRcdHZhciBxdWV1ZSA9IFtdO1xuXHRcdFx0cXVldWUuZCA9IDA7XG5cdFx0XHRkZXAudGhlbigocikgPT4ge1xuXHRcdFx0XHRvYmpbd2VicGFja0V4cG9ydHNdID0gcjtcblx0XHRcdFx0cmVzb2x2ZVF1ZXVlKHF1ZXVlKTtcblx0XHRcdH0sIChlKSA9PiB7XG5cdFx0XHRcdG9ialt3ZWJwYWNrRXJyb3JdID0gZTtcblx0XHRcdFx0cmVzb2x2ZVF1ZXVlKHF1ZXVlKTtcblx0XHRcdH0pO1xuXHRcdFx0dmFyIG9iaiA9IHt9O1xuXHRcdFx0b2JqW3dlYnBhY2tRdWV1ZXNdID0gKGZuKSA9PiAoZm4ocXVldWUpKTtcblx0XHRcdHJldHVybiBvYmo7XG5cdFx0fVxuXHR9XG5cdHZhciByZXQgPSB7fTtcblx0cmV0W3dlYnBhY2tRdWV1ZXNdID0geCA9PiB7fTtcblx0cmV0W3dlYnBhY2tFeHBvcnRzXSA9IGRlcDtcblx0cmV0dXJuIHJldDtcbn0pKTtcbl9fd2VicGFja19yZXF1aXJlX18uYSA9IChtb2R1bGUsIGJvZHksIGhhc0F3YWl0KSA9PiB7XG5cdHZhciBxdWV1ZTtcblx0aGFzQXdhaXQgJiYgKChxdWV1ZSA9IFtdKS5kID0gLTEpO1xuXHR2YXIgZGVwUXVldWVzID0gbmV3IFNldCgpO1xuXHR2YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzO1xuXHR2YXIgY3VycmVudERlcHM7XG5cdHZhciBvdXRlclJlc29sdmU7XG5cdHZhciByZWplY3Q7XG5cdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlaikgPT4ge1xuXHRcdHJlamVjdCA9IHJlajtcblx0XHRvdXRlclJlc29sdmUgPSByZXNvbHZlO1xuXHR9KTtcblx0cHJvbWlzZVt3ZWJwYWNrRXhwb3J0c10gPSBleHBvcnRzO1xuXHRwcm9taXNlW3dlYnBhY2tRdWV1ZXNdID0gKGZuKSA9PiAocXVldWUgJiYgZm4ocXVldWUpLCBkZXBRdWV1ZXMuZm9yRWFjaChmbiksIHByb21pc2VbXCJjYXRjaFwiXSh4ID0+IHt9KSk7XG5cdG1vZHVsZS5leHBvcnRzID0gcHJvbWlzZTtcblx0Ym9keSgoZGVwcykgPT4ge1xuXHRcdGN1cnJlbnREZXBzID0gd3JhcERlcHMoZGVwcyk7XG5cdFx0dmFyIGZuO1xuXHRcdHZhciBnZXRSZXN1bHQgPSAoKSA9PiAoY3VycmVudERlcHMubWFwKChkKSA9PiB7XG5cdFx0XHRpZihkW3dlYnBhY2tFcnJvcl0pIHRocm93IGRbd2VicGFja0Vycm9yXTtcblx0XHRcdHJldHVybiBkW3dlYnBhY2tFeHBvcnRzXTtcblx0XHR9KSlcblx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG5cdFx0XHRmbiA9ICgpID0+IChyZXNvbHZlKGdldFJlc3VsdCkpO1xuXHRcdFx0Zm4uciA9IDA7XG5cdFx0XHR2YXIgZm5RdWV1ZSA9IChxKSA9PiAocSAhPT0gcXVldWUgJiYgIWRlcFF1ZXVlcy5oYXMocSkgJiYgKGRlcFF1ZXVlcy5hZGQocSksIHEgJiYgIXEuZCAmJiAoZm4ucisrLCBxLnB1c2goZm4pKSkpO1xuXHRcdFx0Y3VycmVudERlcHMubWFwKChkZXApID0+IChkZXBbd2VicGFja1F1ZXVlc10oZm5RdWV1ZSkpKTtcblx0XHR9KTtcblx0XHRyZXR1cm4gZm4uciA/IHByb21pc2UgOiBnZXRSZXN1bHQoKTtcblx0fSwgKGVycikgPT4gKChlcnIgPyByZWplY3QocHJvbWlzZVt3ZWJwYWNrRXJyb3JdID0gZXJyKSA6IG91dGVyUmVzb2x2ZShleHBvcnRzKSksIHJlc29sdmVRdWV1ZShxdWV1ZSkpKTtcblx0cXVldWUgJiYgcXVldWUuZCA8IDAgJiYgKHF1ZXVlLmQgPSAwKTtcbn07IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Kb3NlZmluK1NhbnM6d2dodEA0MDA7NTAwOzYwMDs3MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqLCo6OmJlZm9yZSwqOjphZnRlcntib3gtc2l6aW5nOmJvcmRlci1ib3g7bWFyZ2luOjA7cGFkZGluZzowfWh0bWwsYm9keXtoZWlnaHQ6MTAwJTtmb250LWZhbWlseTpcIkpvc2VmaW4gU2Fuc1wiLHNhbnMtc2VyaWZ9Ym9keXtsaW5lLWhlaWdodDoxLjU7LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZH1pbWcscGljdHVyZSx2aWRlbyxjYW52YXMsc3Zne2Rpc3BsYXk6YmxvY2s7bWF4LXdpZHRoOjEwMCV9aW5wdXQsYnV0dG9uLHRleHRhcmVhLHNlbGVjdHtmb250OmluaGVyaXR9cCxoMSxoMixoMyxoNCxoNSxoNntvdmVyZmxvdy13cmFwOmJyZWFrLXdvcmR9dWx7bGlzdC1zdHlsZTpub25lfWF7Y29sb3I6aW5pdGlhbH0jcm9vdCwjX19uZXh0e2lzb2xhdGlvbjppc29sYXRlfWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlL3Jlc2V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQSxxQkFHRSxxQkFBQSxDQUNBLFFBQUEsQ0FDQSxTQUFBLENBR0YsVUFFRSxXQUFBLENBQ0EscUNBQUEsQ0FHRixLQUNFLGVBQUEsQ0FDQSxrQ0FBQSxDQUdGLDZCQUtFLGFBQUEsQ0FDQSxjQUFBLENBR0YsNkJBSUUsWUFBQSxDQUdGLG9CQU9FLHdCQUFBLENBR0YsR0FDRSxlQUFBLENBR0YsRUFFRSxhQUFBLENBR0YsY0FFRSxpQkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBDU1MgcmVzZXRzICovXFxyXFxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Sm9zZWZpbitTYW5zOndnaHRANDAwOzUwMDs2MDA7NzAwJmRpc3BsYXk9c3dhcCcpO1xcclxcblxcclxcbiosXFxyXFxuKjo6YmVmb3JlLFxcclxcbio6OmFmdGVyIHtcXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbn1cXHJcXG5cXHJcXG5odG1sLFxcclxcbmJvZHkge1xcclxcbiAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgZm9udC1mYW1pbHk6ICdKb3NlZmluIFNhbnMnLCBzYW5zLXNlcmlmO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxyXFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXHJcXG59XFxyXFxuXFxyXFxuaW1nLFxcclxcbnBpY3R1cmUsXFxyXFxudmlkZW8sXFxyXFxuY2FudmFzLFxcclxcbnN2ZyB7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG4gIG1heC13aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuaW5wdXQsXFxyXFxuYnV0dG9uLFxcclxcbnRleHRhcmVhLFxcclxcbnNlbGVjdCB7XFxyXFxuICBmb250OiBpbmhlcml0O1xcclxcbn1cXHJcXG5cXHJcXG5wLFxcclxcbmgxLFxcclxcbmgyLFxcclxcbmgzLFxcclxcbmg0LFxcclxcbmg1LFxcclxcbmg2IHtcXHJcXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XFxyXFxufVxcclxcblxcclxcbnVsIHtcXHJcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbmEge1xcclxcbiAgLyogdGV4dC1kZWNvcmF0aW9uOiBub25lOyAqL1xcclxcbiAgY29sb3I6IGluaXRpYWw7XFxyXFxufVxcclxcblxcclxcbiNyb290LFxcclxcbiNfX25leHQge1xcclxcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYG5hdntkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO3dpZHRoOjEwMCU7cGFkZGluZy1pbmxpbmU6NnJlbTtwYWRkaW5nLWJsb2NrOjIuNHJlbX1uYXYgLndyYXBwZXJ7ZGlzcGxheTpmbGV4O2dhcDoyLjRyZW19bWFpbntkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOm1pbm1heCgwLCAzLjVmcikgbWlubWF4KDAsIDEuNWZyKTtnYXA6MS4ycmVtIDIuNHJlbTtwYWRkaW5nLWlubGluZTo2cmVtfW1haW4gc2VjdGlvbntib3gtc2hhZG93OjAgM3B4IDZweCByZ2JhKDAsMCwwLC4xNiksMCAzcHggNnB4IHJnYmEoMCwwLDAsLjIzKTtib3JkZXItcmFkaXVzOjE1cHg7cGFkZGluZzoyLjRyZW19bWFpbiAubWFpbntncmlkLXJvdzpzcGFuIDM7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0ubG9jYXRpb257Zm9udC1zaXplOjEuNXJlbTtsaW5lLWhlaWdodDoxLjF9LmxvY2F0aW9uX19uYW1le2ZvbnQtd2VpZ2h0OmJvbGR9LnNlYXJjaC1iYXJ7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6NTBjaH0uc2VhcmNoLWJhciBpe3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7bGVmdDoyZW07dHJhbnNsYXRlOi01MCUgLTUwJTtjdXJzb3I6cG9pbnRlcn0uc2VhcmNoLWJhciAuZXJyb3ItbWVzc2FnZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO3JpZ2h0OjEuNWVtO3RyYW5zbGF0ZTowJSAtNTAlO2NvbG9yOnJnYmEoMTc4LDM0LDM0LC43NDcpO3RleHQtYWxpZ246cmlnaHQ7cG9pbnRlci1ldmVudHM6bm9uZX0uc2VhcmNoLWJhciAuZXJyb3ItbWVzc2FnZS5oaWRkZW57ZGlzcGxheTpub25lfS5zZWFyY2gtYmFyIGlucHV0e3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cGFkZGluZy1pbmxpbmU6My41ZW0gMmVtO2JveC1zaGFkb3c6MCAzcHggNnB4IHJnYmEoMCwwLDAsLjE2KSwwIDNweCA2cHggcmdiYSgwLDAsMCwuMjMpO2JvcmRlci1yYWRpdXM6NWVtfS5zZXR0aW5nc3twb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7Zm9udC1zaXplOjEuM3JlbTt3aWR0aDoyLjVlbTthc3BlY3QtcmF0aW86MS8xO2JveC1zaGFkb3c6MCAzcHggNnB4IHJnYmEoMCwwLDAsLjE2KSwwIDNweCA2cHggcmdiYSgwLDAsMCwuMjMpO2JvcmRlci1yYWRpdXM6NTAlO2N1cnNvcjpwb2ludGVyfS5zZXR0aW5ncyBpe3RyYW5zaXRpb246LjNzfS5zZXR0aW5ncyAucHJlZmVyZW5jZXN7cG9zaXRpb246YWJzb2x1dGU7dG9wOmNhbGMoMTAwJSArIDEwcHgpO3JpZ2h0OjAlO2Rpc3BsYXk6bm9uZTtnYXA6LjdyZW07ZmxleC1kaXJlY3Rpb246Y29sdW1uO3dpZHRoOjEwcmVtO3BhZGRpbmc6MS4ycmVtO2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjEwcHg7Ym94LXNoYWRvdzowIDNweCA2cHggcmdiYSgwLDAsMCwuMTYpLDAgM3B4IDZweCByZ2JhKDAsMCwwLC4yMyl9LnNldHRpbmdzIC5wcmVmZXJlbmNlczo6YWZ0ZXJ7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6OSU7dG9wOi0xMHB4O2NvbnRlbnQ6XCJcIjt3aWR0aDowO2JvcmRlci1sZWZ0OjEwcHggc29saWQgcmdiYSgwLDAsMCwwKTtib3JkZXItcmlnaHQ6MTBweCBzb2xpZCByZ2JhKDAsMCwwLDApO2JvcmRlci1ib3R0b206MTBweCBzb2xpZCAjY2NjfS5zZXR0aW5ncyAucHJlZmVyZW5jZXMgLm9wdGlvbntkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2dhcDoxcmVtfS5zZXR0aW5ncyAucHJlZmVyZW5jZXMgLnN3aXRjaHtwb3NpdGlvbjpyZWxhdGl2ZTtiYWNrZ3JvdW5kOiNjY2M7Ym9yZGVyOi4yZW0gc29saWQgI2NjYztib3JkZXItcmFkaXVzOjVlbTt3aWR0aDoyZW07aGVpZ2h0OjFlbTtpc29sYXRpb246aXNvbGF0ZTtjdXJzb3I6cG9pbnRlcn0uc2V0dGluZ3MgLnByZWZlcmVuY2VzIC5zd2l0Y2ggLmluZGljYXRvcntwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjUwJTt3aWR0aDo1MCU7aGVpZ2h0OjEwMCU7Ym9yZGVyLXJhZGl1czo1ZW07YmFja2dyb3VuZDojZmZmO3RyYW5zZm9ybS1vcmlnaW46MCA1MCU7dHJhbnNsYXRlOjEwMCUgLTUwJTt0cmFuc2l0aW9uOi4yc30uc2V0dGluZ3MgLm9wdGlvbjppcyhbZGF0YS12YWx1ZT1mXSxbZGF0YS12YWx1ZT1tcGhdKSAuaW5kaWNhdG9ye3RyYW5zbGF0ZTowJSAtNTAlfS5zZXR0aW5nczpob3ZlciBpe3JvdGF0ZTo5MGRlZ30uc2V0dGluZ3M6aG92ZXIgLnByZWZlcmVuY2Vze2Rpc3BsYXk6ZmxleH0uY3VycmVudHtkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOm1heC1jb250ZW50IDFmcjtnYXA6MCAyLjRyZW07Zm9udC1zaXplOjFyZW19LmN1cnJlbnRfX2ljb257aGVpZ2h0OjhlbTtvYmplY3QtZml0OmNvbnRhaW47Z3JpZC1yb3c6c3BhbiAyfS5jdXJyZW50X190ZW1we2FsaWduLXNlbGY6Y2VudGVyO2ZvbnQtc2l6ZTozLjVlbX0uY3VycmVudF9fdGV4dHtmb250LXNpemU6MS43ZW19LnN3aXRjaC1mb3JlY2FzdHtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDtiYWNrZ3JvdW5kOiNjY2M7Ym9yZGVyOi40ZW0gc29saWQgI2NjYztib3JkZXItcmFkaXVzOjVlbTtwYWRkaW5nOi41ZW0gMDt3aWR0aDo5ZW07cG9zaXRpb246cmVsYXRpdmU7aXNvbGF0aW9uOmlzb2xhdGU7Y3Vyc29yOnBvaW50ZXJ9LnN3aXRjaC1mb3JlY2FzdCAuaW5kaWNhdG9ye3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6NTAlO3dpZHRoOjUwJTtoZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyLXJhZGl1czo1ZW07Ym94LXNoYWRvdzowIDFweCAzcHggcmdiYSgwLDAsMCwuMTIpLDAgMXB4IDJweCByZ2JhKDAsMCwwLC4yNCk7dHJhbnNmb3JtLW9yaWdpbjowIDUwJTt0cmFuc2xhdGU6MTAwJSAtNTAlO3RyYW5zaXRpb246LjJzfS5zd2l0Y2gtZm9yZWNhc3QgLm1vZGV7dGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6NTAlO3otaW5kZXg6MX0uZm9yZWNhc3QtbGlzdHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmdyaWQ7Z3JpZC1hdXRvLWZsb3c6Y29sdW1uO2dhcDoxcmVtO292ZXJmbG93OnNjcm9sbDtwYWRkaW5nOjFlbSAuNWVtfS5mb3JlY2FzdHtmb250LXNpemU6MXJlbTtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxM2VtO3BhZGRpbmc6MWVtO2JveC1zaGFkb3c6MCAzcHggNnB4IHJnYmEoMCwwLDAsLjE2KSwwIDNweCA2cHggcmdiYSgwLDAsMCwuMjMpO2JvcmRlci1yYWRpdXM6MTBweDt0ZXh0LWFsaWduOnJpZ2h0fS5mb3JlY2FzdF9fdGVtcHtmb250LXNpemU6MS44ZW19LmZvcmVjYXN0X190aW1le2ZvbnQtc2l6ZToxZW07cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MWVtO2JvdHRvbToxZW19LmZvcmVjYXN0X19pY29ue3Bvc2l0aW9uOnJlbGF0aXZlO2xlZnQ6MDtib3R0b206MH0uYWRkaXRpb25hbHtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2dhcDoyLjRyZW07Zm9udC1zaXplOjEuNXJlbX0uYWRkaXRpb25hbF9faWNvbntmb250LXNpemU6MS41ZW07ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5hZGRpdGlvbmFsX190ZXh0e2ZvbnQtc2l6ZTouN2VtfS5hZGRpdGlvbmFsX19kYXRhe2ZvbnQtc2l6ZToxLjVlbTtmb250LXdlaWdodDpib2xkfS5sb2FkaW5nLXNjcmVlbntwb3NpdGlvbjpmaXhlZDtpbnNldDowO2Rpc3BsYXk6bm9uZTtmbGV4LWRpcmVjdGlvbjpjb2x1bW47Z2FwOjFyZW07YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwdmg7YmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LC44NjY2NjY2NjY3KX0ubG9hZGluZy1zY3JlZW4gLmNpcmNsZXt3aWR0aDo4cmVtO2FzcGVjdC1yYXRpbzoxO2JvcmRlci10b3A6MXJlbSBzb2xpZCAjMzczNTM1O2JvcmRlci1sZWZ0OjFyZW0gc29saWQgI2E5YTlhOTtib3JkZXItcmlnaHQ6MXJlbSBzb2xpZCAjYTlhOWE5O2JvcmRlci1ib3R0b206MXJlbSBzb2xpZCAjYTlhOWE5O2JvcmRlci1yYWRpdXM6NTAlfS5sb2FkaW5nLXNjcmVlbi5hY3RpdmV7ZGlzcGxheTpmbGV4fS5sb2FkaW5nLXNjcmVlbi5hY3RpdmUgLmNpcmNsZXthbmltYXRpb246c3Bpbm5pbmcgMS41cyBpbmZpbml0ZX1Aa2V5ZnJhbWVzIHNwaW5uaW5ne2Zyb217cm90YXRlOjBkZWd9dG97cm90YXRlOjM2MGRlZ319YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFHQSxJQUNFLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLDZCQUFBLENBQ0EsVUFBQSxDQUNBLG1CQVJxQixDQVNyQixvQkFSb0IsQ0FVcEIsYUFDRSxZQUFBLENBQ0EsVUFaa0IsQ0FnQnRCLEtBQ0UsWUFBQSxDQUNBLHVEQUFBLENBQ0EsaUJBQUEsQ0FFQSxtQkF0QnFCLENBd0JyQixhQUNFLDhEQUFBLENBQ0Esa0JBQUEsQ0FDQSxjQTFCa0IsQ0E2QnBCLFdBQ0UsZUFBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLDZCQUFBLENBS0osVUFDRSxnQkFBQSxDQUNBLGVBQUEsQ0FFQSxnQkFDRSxnQkFBQSxDQXVCSixZQUNFLGlCQUFBLENBQ0EsVUFBQSxDQUVBLGNBQ0UsaUJBQUEsQ0FDQSxPQUFBLENBQ0EsUUFBQSxDQUNBLG1CQUFBLENBRUEsY0FBQSxDQUdGLDJCQUNFLGlCQUFBLENBQ0EsT0FBQSxDQUNBLFdBQUEsQ0FDQSxpQkFBQSxDQUVBLDBCQUFBLENBQ0EsZ0JBQUEsQ0FFQSxtQkFBQSxDQUVBLGtDQUNFLFlBQUEsQ0FJSixrQkFDRSxVQUFBLENBQ0EsV0FBQSxDQUNBLHdCQUFBLENBRUEsOERBQUEsQ0FDQSxpQkFBQSxDQUlKLFVBQ0UsaUJBQUEsQ0FFQSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxzQkFBQSxDQUVBLGdCQUFBLENBQ0EsV0FBQSxDQUNBLGdCQUFBLENBRUEsOERBQUEsQ0FDQSxpQkFBQSxDQUVBLGNBQUEsQ0FFQSxZQUNFLGNBQUEsQ0FHRix1QkFHRSxpQkFBQSxDQUNBLHFCQUFBLENBQ0EsUUFBQSxDQUVBLFlBQUEsQ0FDQSxTQUFBLENBQ0EscUJBQUEsQ0FFQSxXQUFBLENBQ0EsY0FBQSxDQUVBLGVBQUEsQ0FDQSxrQkFBQSxDQUNBLDhEQUFBLENBRUEsOEJBQ0UsaUJBQUEsQ0FDQSxRQUFBLENBQ0EsU0FBQSxDQUNBLFVBQUEsQ0FDQSxPQUFBLENBQ0Esb0NBQUEsQ0FDQSxxQ0FBQSxDQUNBLDZCQUFBLENBR0YsK0JBQ0UsWUFBQSxDQUNBLGtCQUFBLENBQ0EsUUFBQSxDQUdGLCtCQUNFLGlCQUFBLENBQ0EsZUFBQSxDQUNBLHNCQUFBLENBQ0EsaUJBQUEsQ0FHQSxTQUFBLENBQ0EsVUFBQSxDQUVBLGlCQUFBLENBRUEsY0FBQSxDQUVBLDBDQUNFLGlCQUFBLENBQ0EsTUFBQSxDQUNBLE9BQUEsQ0FDQSxTQUFBLENBQ0EsV0FBQSxDQUVBLGlCQUFBLENBQ0EsZUFBQSxDQUVBLHNCQUFBLENBQ0EsbUJBQUEsQ0FDQSxjQUFBLENBTUosaUVBQ0UsaUJBQUEsQ0FLRixrQkFDRSxZQUFBLENBR0YsNkJBQ0UsWUFBQSxDQU1OLFNBQ0UsWUFBQSxDQUNBLHFDQUFBLENBQ0EsWUFBQSxDQUNBLGNBQUEsQ0FFQSxlQUNFLFVBQUEsQ0FDQSxrQkFBQSxDQUNBLGVBQUEsQ0FHRixlQUNFLGlCQUFBLENBQ0EsZUFBQSxDQUdGLGVBQ0UsZUFBQSxDQUtKLGlCQUdFLFlBQUEsQ0FDQSw0QkFBQSxDQUVBLGVBTEssQ0FNTCxzQkFBQSxDQUNBLGlCQUFBLENBRUEsY0FBQSxDQUNBLFNBQUEsQ0FFQSxpQkFBQSxDQUNBLGlCQUFBLENBRUEsY0FBQSxDQUVBLDRCQUNFLGlCQUFBLENBQ0EsTUFBQSxDQUNBLE9BQUEsQ0FDQSxTQUFBLENBQ0EsV0FBQSxDQUVBLGVBQUEsQ0FDQSxpQkFBQSxDQUNBLDhEQUFBLENBRUEsc0JBQUEsQ0FDQSxtQkFBQSxDQUNBLGNBQUEsQ0FHRix1QkFDRSxpQkFBQSxDQUNBLFNBQUEsQ0FDQSxTQUFBLENBSUosZUFDRSxpQkFBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLFFBQUEsQ0FDQSxlQUFBLENBQ0EsZ0JBQUEsQ0FHRixVQUVFLGNBQUEsQ0FFQSxpQkFBQSxDQUNBLFVBQUEsQ0FDQSxXQUxpQixDQU9qQiw4REFBQSxDQUNBLGtCQUFBLENBQ0EsZ0JBQUEsQ0FFQSxnQkFDRSxlQUFBLENBR0YsZ0JBQ0UsYUFBQSxDQUNBLGlCQUFBLENBQ0EsU0FsQmUsQ0FtQmYsVUFuQmUsQ0FzQmpCLGdCQUNFLGlCQUFBLENBQ0EsTUFBQSxDQUNBLFFBQUEsQ0FLSixZQUNFLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLFVBNVRvQixDQThUcEIsZ0JBQUEsQ0FFQSxrQkFDRSxlQUFBLENBQ0EsWUFBQSxDQUNBLGtCQUFBLENBQ0Esc0JBQUEsQ0FHRixrQkFDRSxjQUFBLENBRUYsa0JBQ0UsZUFBQSxDQUNBLGdCQUFBLENBS0osZ0JBQ0UsY0FBQSxDQUNBLE9BQUEsQ0FFQSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxRQUFBLENBQ0Esa0JBQUEsQ0FDQSxzQkFBQSxDQUVBLFVBQUEsQ0FDQSxZQUFBLENBQ0Esd0NBQUEsQ0FFQSx3QkFHRSxVQUFBLENBQ0EsY0FBQSxDQUVBLDZCQUFBLENBQ0EsOEJBQUEsQ0FDQSwrQkFBQSxDQUNBLGdDQUFBLENBQ0EsaUJBQUEsQ0FHRix1QkFDRSxZQUFBLENBRUEsK0JBQ0UsZ0NBQUEsQ0FHRixvQkFDRSxLQUNFLFdBQUEsQ0FHRixHQUNFLGFBQUEsQ0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIkc3BhY2UtaW5saW5lLXNlY3Rpb246IDZyZW07XFxyXFxuJHNwYWNlLWJsb2NrLXNlY3Rpb246IGNhbGMoJHNwYWNlLWlubGluZS1zZWN0aW9uIC8gMi41KTtcXHJcXG5cXHJcXG5uYXYge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIHBhZGRpbmctaW5saW5lOiAkc3BhY2UtaW5saW5lLXNlY3Rpb247XFxyXFxuICBwYWRkaW5nLWJsb2NrOiAkc3BhY2UtYmxvY2stc2VjdGlvbjtcXHJcXG5cXHJcXG4gIC53cmFwcGVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZ2FwOiAkc3BhY2UtYmxvY2stc2VjdGlvbjtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxubWFpbiB7XFxyXFxuICBkaXNwbGF5OiBncmlkO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW5tYXgoMCwgMy41ZnIpIG1pbm1heCgwLCAxLjVmcik7XFxyXFxuICBnYXA6IGNhbGMoJHNwYWNlLWJsb2NrLXNlY3Rpb24gLyAyKSAkc3BhY2UtYmxvY2stc2VjdGlvbjtcXHJcXG5cXHJcXG4gIHBhZGRpbmctaW5saW5lOiAkc3BhY2UtaW5saW5lLXNlY3Rpb247XFxyXFxuXFxyXFxuICBzZWN0aW9uIHtcXHJcXG4gICAgYm94LXNoYWRvdzogMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjMpO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbiAgICBwYWRkaW5nOiAkc3BhY2UtYmxvY2stc2VjdGlvbjtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5tYWluIHtcXHJcXG4gICAgZ3JpZC1yb3c6IHNwYW4gMztcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4vLyBOYXZiYXJcXHJcXG4ubG9jYXRpb24ge1xcclxcbiAgZm9udC1zaXplOiAxLjVyZW07XFxyXFxuICBsaW5lLWhlaWdodDogMS4xO1xcclxcblxcclxcbiAgJl9fbmFtZSB7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcclxcbiAgfVxcclxcblxcclxcbiAgLy8gJjpoYXMoLmxvY2F0aW9uX19uYW1lOmVtcHR5LCAubG9jYXRpb25fX2NvdW50cnk6ZW1wdHkpIHtcXHJcXG4gIC8vICAgd2lkdGg6IDE3cmVtO1xcclxcblxcclxcbiAgLy8gICAubG9jYXRpb25fX25hbWUsXFxyXFxuICAvLyAgIC5sb2NhdGlvbl9fY291bnRyeSB7XFxyXFxuICAvLyAgICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAvLyAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAvLyAgICAgaGVpZ2h0OiAxZW07XFxyXFxuICAvLyAgICAgbWFyZ2luOiAwLjVlbTtcXHJcXG5cXHJcXG4gIC8vICAgICBiYWNrZ3JvdW5kOiBkYXJrZ3JheTtcXHJcXG4gIC8vICAgICBib3JkZXItcmFkaXVzOiAwLjEyNWVtO1xcclxcbiAgLy8gICB9XFxyXFxuXFxyXFxuICAvLyAgIC5sb2NhdGlvbl9fY291bnRyeSB7XFxyXFxuICAvLyAgICAgd2lkdGg6IDgwJTtcXHJcXG4gIC8vICAgfVxcclxcbiAgLy8gfVxcclxcbn1cXHJcXG5cXHJcXG4uc2VhcmNoLWJhciB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICB3aWR0aDogNTBjaDtcXHJcXG5cXHJcXG4gIGkge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIHRvcDogNTAlO1xcclxcbiAgICBsZWZ0OiAyZW07XFxyXFxuICAgIHRyYW5zbGF0ZTogLTUwJSAtNTAlO1xcclxcblxcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAuZXJyb3ItbWVzc2FnZSB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgdG9wOiA1MCU7XFxyXFxuICAgIHJpZ2h0OiAxLjVlbTtcXHJcXG4gICAgdHJhbnNsYXRlOiAwJSAtNTAlO1xcclxcblxcclxcbiAgICBjb2xvcjogcmdiYSgxNzgsIDM0LCAzNCwgMC43NDcpO1xcclxcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcXHJcXG5cXHJcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxyXFxuXFxyXFxuICAgICYuaGlkZGVuIHtcXHJcXG4gICAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICB9XFxyXFxuICB9XFxyXFxuXFxyXFxuICBpbnB1dCB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgIHBhZGRpbmctaW5saW5lOiAzLjVlbSAyZW07XFxyXFxuXFxyXFxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNWVtO1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4uc2V0dGluZ3Mge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcblxcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG5cXHJcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcclxcbiAgd2lkdGg6IDIuNWVtO1xcclxcbiAgYXNwZWN0LXJhdGlvOiAxIC8gMTtcXHJcXG5cXHJcXG4gIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG5cXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG5cXHJcXG4gIGkge1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xcclxcbiAgfVxcclxcblxcclxcbiAgLnByZWZlcmVuY2VzIHtcXHJcXG4gICAgJHRyaWFuZ2xlLWhlaWdodDogMTBweDtcXHJcXG5cXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICB0b3A6IGNhbGMoMTAwJSArICR0cmlhbmdsZS1oZWlnaHQpO1xcclxcbiAgICByaWdodDogMCU7XFxyXFxuXFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICAgIGdhcDogMC43cmVtO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcblxcclxcbiAgICB3aWR0aDogMTByZW07XFxyXFxuICAgIHBhZGRpbmc6IGNhbGMoJHNwYWNlLWJsb2NrLXNlY3Rpb24gLyAyKTtcXHJcXG5cXHJcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTtcXHJcXG5cXHJcXG4gICAgJjo6YWZ0ZXIge1xcclxcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICByaWdodDogOSU7XFxyXFxuICAgICAgdG9wOiBjYWxjKDBweCAtICR0cmlhbmdsZS1oZWlnaHQpO1xcclxcbiAgICAgIGNvbnRlbnQ6ICcnO1xcclxcbiAgICAgIHdpZHRoOiAwO1xcclxcbiAgICAgIGJvcmRlci1sZWZ0OiAkdHJpYW5nbGUtaGVpZ2h0IHNvbGlkIHRyYW5zcGFyZW50O1xcclxcbiAgICAgIGJvcmRlci1yaWdodDogJHRyaWFuZ2xlLWhlaWdodCBzb2xpZCB0cmFuc3BhcmVudDtcXHJcXG4gICAgICBib3JkZXItYm90dG9tOiAkdHJpYW5nbGUtaGVpZ2h0IHNvbGlkICNjY2M7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLm9wdGlvbiB7XFxyXFxuICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICAgIGdhcDogMXJlbTtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAuc3dpdGNoIHtcXHJcXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgICAgYmFja2dyb3VuZDogI2NjYztcXHJcXG4gICAgICBib3JkZXI6IDAuMmVtIHNvbGlkICNjY2M7XFxyXFxuICAgICAgYm9yZGVyLXJhZGl1czogNWVtO1xcclxcblxcclxcbiAgICAgIC8vIHBhZGRpbmc6IDAuNWVtIDA7XFxyXFxuICAgICAgd2lkdGg6IDJlbTtcXHJcXG4gICAgICBoZWlnaHQ6IDFlbTtcXHJcXG5cXHJcXG4gICAgICBpc29sYXRpb246IGlzb2xhdGU7XFxyXFxuXFxyXFxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xcclxcblxcclxcbiAgICAgIC5pbmRpY2F0b3Ige1xcclxcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICAgICAgbGVmdDogMDtcXHJcXG4gICAgICAgIHRvcDogNTAlO1xcclxcbiAgICAgICAgd2lkdGg6IDUwJTtcXHJcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXHJcXG5cXHJcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVlbTtcXHJcXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcblxcclxcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCA1MCU7XFxyXFxuICAgICAgICB0cmFuc2xhdGU6IDEwMCUgLTUwJTtcXHJcXG4gICAgICAgIHRyYW5zaXRpb246IDAuMnM7XFxyXFxuICAgICAgfVxcclxcbiAgICB9XFxyXFxuICB9XFxyXFxuXFxyXFxuICAub3B0aW9uOmlzKFtkYXRhLXZhbHVlPSdmJ10sIFtkYXRhLXZhbHVlPSdtcGgnXSkge1xcclxcbiAgICAuaW5kaWNhdG9yIHtcXHJcXG4gICAgICB0cmFuc2xhdGU6IDAlIC01MCU7XFxyXFxuICAgIH1cXHJcXG4gIH1cXHJcXG5cXHJcXG4gICY6aG92ZXIge1xcclxcbiAgICBpIHtcXHJcXG4gICAgICByb3RhdGU6IDkwZGVnO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5wcmVmZXJlbmNlcyB7XFxyXFxuICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgfVxcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4vLyBNYWluXFxyXFxuLmN1cnJlbnQge1xcclxcbiAgZGlzcGxheTogZ3JpZDtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWF4LWNvbnRlbnQgMWZyO1xcclxcbiAgZ2FwOiAwICRzcGFjZS1ibG9jay1zZWN0aW9uO1xcclxcbiAgZm9udC1zaXplOiAxcmVtO1xcclxcblxcclxcbiAgJl9faWNvbiB7XFxyXFxuICAgIGhlaWdodDogOGVtO1xcclxcbiAgICBvYmplY3QtZml0OiBjb250YWluO1xcclxcbiAgICBncmlkLXJvdzogc3BhbiAyO1xcclxcbiAgfVxcclxcblxcclxcbiAgJl9fdGVtcCB7XFxyXFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiAzLjVlbTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICZfX3RleHQge1xcclxcbiAgICBmb250LXNpemU6IDEuN2VtO1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4vLyBGb3JlY2FzdFxcclxcbi5zd2l0Y2gtZm9yZWNhc3Qge1xcclxcbiAgJGJnOiAjY2NjO1xcclxcblxcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcclxcblxcclxcbiAgYmFja2dyb3VuZDogJGJnO1xcclxcbiAgYm9yZGVyOiAwLjRlbSBzb2xpZCAkYmc7XFxyXFxuICBib3JkZXItcmFkaXVzOiA1ZW07XFxyXFxuXFxyXFxuICBwYWRkaW5nOiAwLjVlbSAwO1xcclxcbiAgd2lkdGg6IDllbTtcXHJcXG5cXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGlzb2xhdGlvbjogaXNvbGF0ZTtcXHJcXG5cXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG5cXHJcXG4gIC5pbmRpY2F0b3Ige1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGxlZnQ6IDA7XFxyXFxuICAgIHRvcDogNTAlO1xcclxcbiAgICB3aWR0aDogNTAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuXFxyXFxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1ZW07XFxyXFxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KTtcXHJcXG5cXHJcXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCA1MCU7XFxyXFxuICAgIHRyYW5zbGF0ZTogMTAwJSAtNTAlO1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xcclxcbiAgfVxcclxcblxcclxcbiAgLm1vZGUge1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIHdpZHRoOiA1MCU7XFxyXFxuICAgIHotaW5kZXg6IDE7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi5mb3JlY2FzdC1saXN0IHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLWF1dG8tZmxvdzogY29sdW1uO1xcclxcbiAgZ2FwOiAxcmVtO1xcclxcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXHJcXG4gIHBhZGRpbmc6IDFlbSAwLjVlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmZvcmVjYXN0IHtcXHJcXG4gICRzcGFjZS1mb3JlY2FzdDogMWVtO1xcclxcbiAgZm9udC1zaXplOiAxcmVtO1xcclxcblxcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgd2lkdGg6IDEzZW07XFxyXFxuICBwYWRkaW5nOiAkc3BhY2UtZm9yZWNhc3Q7XFxyXFxuXFxyXFxuICBib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xcclxcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxyXFxuXFxyXFxuICAmX190ZW1wIHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjhlbTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICZfX3RpbWUge1xcclxcbiAgICBmb250LXNpemU6IDFlbTtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICByaWdodDogJHNwYWNlLWZvcmVjYXN0O1xcclxcbiAgICBib3R0b206ICRzcGFjZS1mb3JlY2FzdDtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICZfX2ljb24ge1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIGxlZnQ6IDA7XFxyXFxuICAgIGJvdHRvbTogMDtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuLy8gQWRkaXRpb25hbFxcclxcbi5hZGRpdGlvbmFsIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgZ2FwOiAkc3BhY2UtYmxvY2stc2VjdGlvbjtcXHJcXG5cXHJcXG4gIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcblxcclxcbiAgJl9faWNvbiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41ZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgfVxcclxcblxcclxcbiAgJl9fdGV4dCB7XFxyXFxuICAgIGZvbnQtc2l6ZTogMC43ZW07XFxyXFxuICB9XFxyXFxuICAmX19kYXRhIHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjVlbTtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi8vIExvYWRpbmcgc2NyZWVuXFxyXFxuLmxvYWRpbmctc2NyZWVuIHtcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gIGluc2V0OiAwO1xcclxcblxcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBnYXA6IDFyZW07XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuXFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogMTAwdmg7XFxyXFxuICBiYWNrZ3JvdW5kOiAjZmZmZmZmZGQ7XFxyXFxuXFxyXFxuICAuY2lyY2xlIHtcXHJcXG4gICAgJGNsci1iZy1jaXJjbGU6IGRhcmtncmV5O1xcclxcbiAgICAkY2xyLWFjY2VudC1jaXJjbGU6IHJnYig1NSwgNTMsIDUzKTtcXHJcXG4gICAgd2lkdGg6IDhyZW07XFxyXFxuICAgIGFzcGVjdC1yYXRpbzogMTtcXHJcXG5cXHJcXG4gICAgYm9yZGVyLXRvcDogMXJlbSBzb2xpZCAkY2xyLWFjY2VudC1jaXJjbGU7XFxyXFxuICAgIGJvcmRlci1sZWZ0OiAxcmVtIHNvbGlkICRjbHItYmctY2lyY2xlO1xcclxcbiAgICBib3JkZXItcmlnaHQ6IDFyZW0gc29saWQgJGNsci1iZy1jaXJjbGU7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IDFyZW0gc29saWQgJGNsci1iZy1jaXJjbGU7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICYuYWN0aXZlIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG5cXHJcXG4gICAgLmNpcmNsZSB7XFxyXFxuICAgICAgYW5pbWF0aW9uOiBzcGlubmluZyAxLjVzIGluZmluaXRlO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIEBrZXlmcmFtZXMgc3Bpbm5pbmcge1xcclxcbiAgICAgIGZyb20ge1xcclxcbiAgICAgICAgcm90YXRlOiAwZGVnO1xcclxcbiAgICAgIH1cXHJcXG5cXHJcXG4gICAgICB0byB7XFxyXFxuICAgICAgICByb3RhdGU6IDM2MGRlZztcXHJcXG4gICAgICB9XFxyXFxuICAgIH1cXHJcXG4gIH1cXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsImltcG9ydCAqIGFzIENvbnRyb2xsZXIgZnJvbSAnLi9qcy9jb250cm9sbGVyLmpzJztcclxuaW1wb3J0ICcuL3N0eWxlL3Jlc2V0LmNzcyc7XHJcbmltcG9ydCAnLi9zdHlsZS9zdHlsZS5zY3NzJztcclxuXHJcbi8vIERPTSBFbGVtZW50c1xyXG5jb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtaW5wdXQnKTtcclxuY29uc3Qgc2VhcmNoSWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mYS1tYWduaWZ5aW5nLWdsYXNzJyk7XHJcbmNvbnN0IGVycm9yTXNnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVycm9yLW1lc3NhZ2UnKTtcclxuY29uc3Qgc3dpdGNoRm9yZWNhc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3dpdGNoLWZvcmVjYXN0Jyk7XHJcbmNvbnN0IHByZWZlcmVuY2VzTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcmVmZXJlbmNlcycpO1xyXG5jb25zdCBwcmVmZXJlbmNlT3B0aW9ucyA9IHByZWZlcmVuY2VzTWVudS5xdWVyeVNlbGVjdG9yQWxsKCcub3B0aW9uJyk7XHJcblxyXG4vLyBMaXN0ZW4gdG8gb25sb2FkXHJcbmxldCBjb29yZHMgPSAnJztcclxudHJ5IHtcclxuICBjb25zdCBsb2NhdGlvbiA9IGF3YWl0IGdldExvY2F0aW9uKCk7XHJcbiAgY29vcmRzID0gYCR7bG9jYXRpb24uY29vcmRzLmxhdGl0dWRlfSwke2xvY2F0aW9uLmNvb3Jkcy5sb25naXR1ZGV9YDtcclxufSBjYXRjaCB7XHJcbiAgY29uc29sZS5sb2coJ1VuYWJsZSB0byBnZXQgbG9jYXRpb24nKTtcclxuICBjb25zb2xlLmxvZyhcclxuICAgICdXYWl0IGZvciBUaGUgV2VhdGhlciBBcHAgZmV0Y2hpbmcgd2VhdGhlciBpbmZvcm1hdGlvbiBmcm9tIHNvbWV3aGVyZS4uLidcclxuICApO1xyXG59XHJcbkNvbnRyb2xsZXIuZGlzcGxheVdlYXRoZXIoY29vcmRzKTtcclxuXHJcbi8vIExpc3RlbiB0byBzZWFyY2hiYXIgc3VibWlzc2lvblxyXG5zZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcclxuICBlcnJvck1zZy5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuXHJcbiAgaWYgKGUua2V5ICE9PSAnRW50ZXInKSByZXR1cm47XHJcblxyXG4gIGNvbnN0IGZvcmVjYXN0TW9kZSA9IHN3aXRjaEZvcmVjYXN0LmRhdGFzZXQuZm9yZWNhc3RNb2RlO1xyXG4gIGNvbnN0IGNpdHkgPSBlLmN1cnJlbnRUYXJnZXQudmFsdWU7XHJcbiAgQ29udHJvbGxlci5kaXNwbGF5V2VhdGhlcihjaXR5LCBmb3JlY2FzdE1vZGUpO1xyXG59KTtcclxuXHJcbnNlYXJjaEljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgY29uc3QgZm9yZWNhc3RNb2RlID0gc3dpdGNoRm9yZWNhc3QuZGF0YXNldC5mb3JlY2FzdE1vZGU7XHJcbiAgY29uc3QgY2l0eSA9IHNlYXJjaElucHV0LnZhbHVlO1xyXG4gIENvbnRyb2xsZXIuZGlzcGxheVdlYXRoZXIoY2l0eSwgZm9yZWNhc3RNb2RlKTtcclxufSk7XHJcblxyXG4vLyBMaXN0ZW4gdG8gdG9nZ2xlIHN3aXRjaFxyXG5zd2l0Y2hGb3JlY2FzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgY29uc3QgZm9yZWNhc3RNb2RlID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuZm9yZWNhc3RNb2RlO1xyXG4gIENvbnRyb2xsZXIuc3dpdGNoRm9yZWNhc3QoZm9yZWNhc3RNb2RlKTtcclxufSk7XHJcblxyXG5wcmVmZXJlbmNlT3B0aW9ucy5mb3JFYWNoKChvcHRpb24pID0+IHtcclxuICBvcHRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBjb25zdCBuYW1lID0gb3B0aW9uLmRhdGFzZXQubmFtZTtcclxuICAgIGNvbnN0IHZhbHVlID0gb3B0aW9uLmRhdGFzZXQudmFsdWU7XHJcbiAgICBjb25zdCBmb3JlY2FzdE1vZGUgPSBzd2l0Y2hGb3JlY2FzdC5kYXRhc2V0LmZvcmVjYXN0TW9kZTtcclxuICAgIENvbnRyb2xsZXIuc3dpdGNoUHJlZmVyZW5jZXMobmFtZSwgdmFsdWUsIGZvcmVjYXN0TW9kZSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuLy8gR2VvbG9jYXRpb24gZnVuY3Rpb25cclxuYXN5bmMgZnVuY3Rpb24gZ2V0TG9jYXRpb24oKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+XHJcbiAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKHJlc29sdmUsIHJlamVjdClcclxuICApO1xyXG59XHJcbiIsImNvbnN0IGRheXMgPSBbXHJcbiAgJ1N1bmRheScsXHJcbiAgJ01vbmRheScsXHJcbiAgJ1R1ZXNkYXknLFxyXG4gICdXZWRuZXNkYXknLFxyXG4gICdUaHVyc2RheScsXHJcbiAgJ0ZyaWRheScsXHJcbiAgJ1NhdHVyZGF5JyxcclxuXTtcclxuY29uc3QgbW9udGhzID0gW1xyXG4gICdKYW4nLFxyXG4gICdGZWInLFxyXG4gICdNYXInLFxyXG4gICdBcHInLFxyXG4gICdNYXknLFxyXG4gICdKdW4nLFxyXG4gICdKdWwnLFxyXG4gICdBdWcnLFxyXG4gICdTZXAnLFxyXG4gICdPY3QnLFxyXG4gICdOb3YnLFxyXG4gICdEZWMnLFxyXG5dO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlRm9yZWNhc3RJdGVtKHRlbXAsIHRpbWUsIGljb24pIHtcclxuICByZXR1cm4gYFxyXG4gICAgPGxpIGNsYXNzPVwiZm9yZWNhc3RcIj5cclxuICAgICAgPHAgY2xhc3M9XCJmb3JlY2FzdF9fdGVtcFwiPiR7dGVtcH08L3A+XHJcbiAgICAgIDxwIGNsYXNzPVwiZm9yZWNhc3RfX3RpbWVcIj4ke3RpbWV9PC9wPlxyXG4gICAgICA8aW1nIGNsYXNzPVwiZm9yZWNhc3RfX2ljb25cIiBzcmM9XCIke2ljb259XCIgLz5cclxuICAgIDwvbGk+XHJcbiAgYDtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGxheUxvY2F0aW9uKGxvY2F0aW9uKSB7XHJcbiAgY29uc3QgbG9jYXRpb25FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2NhdGlvbicpO1xyXG5cclxuICBjb25zdCBsb2NhdGlvbk5hbWUgPSBsb2NhdGlvbkVsLnF1ZXJ5U2VsZWN0b3IoJy5sb2NhdGlvbl9fbmFtZScpO1xyXG4gIGxvY2F0aW9uTmFtZS50ZXh0Q29udGVudCA9IGxvY2F0aW9uLm5hbWU7XHJcblxyXG4gIGNvbnN0IGxvY2F0aW9uQ291bnRyeSA9IGxvY2F0aW9uRWwucXVlcnlTZWxlY3RvcignLmxvY2F0aW9uX19jb3VudHJ5Jyk7XHJcbiAgbG9jYXRpb25Db3VudHJ5LnRleHRDb250ZW50ID0gJywgJyArIGxvY2F0aW9uLmNvdW50cnk7XHJcblxyXG4gIGNvbnN0IGxvY2F0aW9uTG9jYWx0aW1lID0gbG9jYXRpb25FbC5xdWVyeVNlbGVjdG9yKCcubG9jYXRpb25fX2xvY2FsdGltZScpO1xyXG4gIGNvbnN0IGRhdGVPYmogPSBuZXcgRGF0ZShsb2NhdGlvbi5sb2NhbHRpbWUpO1xyXG4gIGxvY2F0aW9uTG9jYWx0aW1lLnRleHRDb250ZW50ID0gYCR7XHJcbiAgICBkYXlzW2RhdGVPYmouZ2V0RGF5KCldXHJcbiAgfSwgJHtkYXRlT2JqLmdldERhdGUoKX0gJHtcclxuICAgIG1vbnRoc1tkYXRlT2JqLmdldE1vbnRoKCldXHJcbiAgfSAke2RhdGVPYmouZ2V0RnVsbFllYXIoKX1gO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkaXNwbGF5Q3VycmVudFdlYXRoZXIoY3VycmVudCwgcHJlZmVyZWRVbml0cykge1xyXG4gIGNvbnN0IGN1cnJlbnRFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdXJyZW50Jyk7XHJcblxyXG4gIGNvbnN0IGN1cnJlbnRJY29uID0gY3VycmVudEVsLnF1ZXJ5U2VsZWN0b3IoJy5jdXJyZW50X19pY29uJyk7XHJcbiAgY3VycmVudEljb24uc3JjID0gY3VycmVudC5pY29uO1xyXG5cclxuICBjb25zdCBjdXJyZW50VGVtcCA9IGN1cnJlbnRFbC5xdWVyeVNlbGVjdG9yKCcuY3VycmVudF9fdGVtcCcpO1xyXG4gIGlmIChwcmVmZXJlZFVuaXRzWzBdID09PSAnZicpXHJcbiAgICBjdXJyZW50VGVtcC50ZXh0Q29udGVudCA9IGAke2N1cnJlbnQudGVtcF9mfSDCsEZgO1xyXG4gIGVsc2UgaWYgKHByZWZlcmVkVW5pdHNbMF0gPT09ICdjJylcclxuICAgIGN1cnJlbnRUZW1wLnRleHRDb250ZW50ID0gYCR7Y3VycmVudC50ZW1wX2N9IMKwQ2A7XHJcblxyXG4gIGNvbnN0IGN1cnJlbnRUZXh0ID0gY3VycmVudEVsLnF1ZXJ5U2VsZWN0b3IoJy5jdXJyZW50X190ZXh0Jyk7XHJcbiAgY3VycmVudFRleHQudGV4dENvbnRlbnQgPSBjdXJyZW50LnRleHQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BsYXlBZGRpdGlvbmFsV2VhdGhlcihjdXJyZW50LCBwcmVmZXJlZFVuaXRzKSB7XHJcbiAgY29uc3QgY3VycmVudEh1bWlkaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZGl0aW9uYWxfX2RhdGEuaHVtaWRpdHknKTtcclxuICBjdXJyZW50SHVtaWRpdHkudGV4dENvbnRlbnQgPSBgJHtjdXJyZW50Lmh1bWlkaXR5fSVgO1xyXG5cclxuICBjb25zdCBjdXJyZW50VVYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkaXRpb25hbF9fZGF0YS51dicpO1xyXG4gIGN1cnJlbnRVVi50ZXh0Q29udGVudCA9IGN1cnJlbnQudXY7XHJcblxyXG4gIGNvbnN0IGN1cnJlbnRXaW5kU3BlZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgJy5hZGRpdGlvbmFsX19kYXRhLndpbmQtc3BlZWQnXHJcbiAgKTtcclxuICBpZiAocHJlZmVyZWRVbml0c1sxXSA9PT0gJ2twaCcpXHJcbiAgICBjdXJyZW50V2luZFNwZWVkLnRleHRDb250ZW50ID0gYCR7Y3VycmVudC53aW5kX2twaH0ga20vaGA7XHJcbiAgZWxzZSBpZiAocHJlZmVyZWRVbml0c1sxXSA9PT0gJ21waCcpXHJcbiAgICBjdXJyZW50V2luZFNwZWVkLnRleHRDb250ZW50ID0gYCR7Y3VycmVudC53aW5kX21waH0gbXBoYDtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGxheURhaWx5Rm9yZWNhc3QoZm9yZWNhc3QsIHByZWZlcmVkVW5pdHMpIHtcclxuICBjb25zdCBmb3JlY2FzdExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9yZWNhc3QtbGlzdCcpO1xyXG4gIGZvcmVjYXN0TGlzdC5pbm5lckhUTUwgPSAnJztcclxuICBmb3JlY2FzdC5mb3JFYWNoKChkYXkpID0+IHtcclxuICAgIGNvbnN0IHRlbXAgPVxyXG4gICAgICBwcmVmZXJlZFVuaXRzWzBdID09PSAnYycgPyBgJHtkYXkudGVtcF9jfSDCsENgIDogYCR7ZGF5LnRlbXBfZn0gwrBGYDtcclxuICAgIGNvbnN0IHRpbWUgPSBkYXlzW25ldyBEYXRlKGRheS5kYXRlKS5nZXREYXkoKV07XHJcbiAgICBjb25zdCBpY29uID0gZGF5Lmljb247XHJcblxyXG4gICAgY29uc3QgaHRtbExpID0gY3JlYXRlRm9yZWNhc3RJdGVtKHRlbXAsIHRpbWUsIGljb24pO1xyXG4gICAgZm9yZWNhc3RMaXN0LmlubmVySFRNTCArPSBodG1sTGk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BsYXlIb3VybHlGb3JlY2FzdChmb3JlY2FzdCwgcHJlZmVyZWRVbml0cykge1xyXG4gIGNvbnN0IGZvcmVjYXN0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JlY2FzdC1saXN0Jyk7XHJcbiAgZm9yZWNhc3RMaXN0LmlubmVySFRNTCA9ICcnO1xyXG4gIGZvcmVjYXN0LmZvckVhY2goKGhvdXIpID0+IHtcclxuICAgIGNvbnN0IHRlbXAgPVxyXG4gICAgICBwcmVmZXJlZFVuaXRzWzBdID09PSAnYycgPyBgJHtob3VyLnRlbXBfY30gwrBDYCA6IGAke2hvdXIudGVtcF9mfSDCsEZgO1xyXG4gICAgY29uc3QgdGltZSA9IGhvdXIuaG91ciArICc6MDAnO1xyXG4gICAgY29uc3QgaWNvbiA9IGhvdXIuaWNvbjtcclxuXHJcbiAgICBjb25zdCBodG1sTGkgPSBjcmVhdGVGb3JlY2FzdEl0ZW0odGVtcCwgdGltZSwgaWNvbik7XHJcbiAgICBmb3JlY2FzdExpc3QuaW5uZXJIVE1MICs9IGh0bWxMaTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVzZXRTZWFyY2hiYXIoKSB7XHJcbiAgY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWlucHV0Jyk7XHJcbiAgc2VhcmNoSW5wdXQudmFsdWUgPSAnJztcclxufVxyXG5cclxuZnVuY3Rpb24gc3dpdGNoRm9yZWNhc3QobW9kZSkge1xyXG4gIGNvbnN0IHN3aXRjaEZvcmVjYXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN3aXRjaC1mb3JlY2FzdCcpO1xyXG4gIGNvbnN0IHN3aXRjaEluZGljYXRvciA9IHN3aXRjaEZvcmVjYXN0LnF1ZXJ5U2VsZWN0b3IoJy5pbmRpY2F0b3InKTtcclxuXHJcbiAgaWYgKG1vZGUgPT09ICdob3VybHknKSB7XHJcbiAgICBzd2l0Y2hGb3JlY2FzdC5kYXRhc2V0LmZvcmVjYXN0TW9kZSA9ICdob3VybHknO1xyXG4gICAgc3dpdGNoSW5kaWNhdG9yLnN0eWxlLnRyYW5zbGF0ZSA9ICcxMDAlIC01MCUnO1xyXG4gIH0gZWxzZSBpZiAobW9kZSA9PT0gJ2RhaWx5Jykge1xyXG4gICAgc3dpdGNoRm9yZWNhc3QuZGF0YXNldC5mb3JlY2FzdE1vZGUgPSAnZGFpbHknO1xyXG4gICAgc3dpdGNoSW5kaWNhdG9yLnN0eWxlLnRyYW5zbGF0ZSA9ICcwJSAtNTAlJztcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BsYXlQcmVmZXJlbmNlcyhwcmVmZXJlZFVuaXRzKSB7XHJcbiAgY29uc3QgcHJlZmVyZW5jZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJlZmVyZW5jZXMnKTtcclxuICBjb25zdCBvcHRpb25zID0gcHJlZmVyZW5jZXMucXVlcnlTZWxlY3RvckFsbCgnLm9wdGlvbicpO1xyXG4gIGNvbnN0IHNldHRpbmdzTWFwID0ge1xyXG4gICAgYzogJ0MnLFxyXG4gICAgZjogJ0YnLFxyXG4gICAga3BoOiAnS20vaCcsXHJcbiAgICBtcGg6ICdNcGgnLFxyXG4gIH07XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcHJlZmVyZWRVbml0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgb3B0aW9uc1tpXS5kYXRhc2V0LnZhbHVlID0gcHJlZmVyZWRVbml0c1tpXTtcclxuICAgIG9wdGlvbnNbaV0ucXVlcnlTZWxlY3RvcignLnVuaXQnKS50ZXh0Q29udGVudCA9XHJcbiAgICAgIHNldHRpbmdzTWFwW3ByZWZlcmVkVW5pdHNbaV1dO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0xvYWRpbmdTY3JlZW4oKSB7XHJcbiAgY29uc3QgbG9hZGluZ1NjcmVlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sb2FkaW5nLXNjcmVlbicpO1xyXG4gIGxvYWRpbmdTY3JlZW4uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhpZGVMb2FkaW5nU2NyZWVuKCkge1xyXG4gIGNvbnN0IGxvYWRpbmdTY3JlZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubG9hZGluZy1zY3JlZW4nKTtcclxuICBsb2FkaW5nU2NyZWVuLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzaG93U2VhcmNoRXJyb3IoZXJyb3IpIHtcclxuICBjb25zdCBlcnJvck1zZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lcnJvci1tZXNzYWdlJyk7XHJcbiAgZXJyb3JNc2cudGV4dENvbnRlbnQgPSBlcnJvcjtcclxuICBlcnJvck1zZy5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGlkZVNlYXJjaEVycm9yKCkge1xyXG4gIGNvbnN0IGVycm9yTXNnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVycm9yLW1lc3NhZ2UnKTtcclxuICBlcnJvck1zZy50ZXh0Q29udGVudCA9ICcnO1xyXG4gIGVycm9yTXNnLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xyXG59XHJcblxyXG5leHBvcnQge1xyXG4gIGRpc3BsYXlDdXJyZW50V2VhdGhlcixcclxuICBkaXNwbGF5TG9jYXRpb24sXHJcbiAgZGlzcGxheUFkZGl0aW9uYWxXZWF0aGVyLFxyXG4gIGRpc3BsYXlEYWlseUZvcmVjYXN0LFxyXG4gIGRpc3BsYXlIb3VybHlGb3JlY2FzdCxcclxuICByZXNldFNlYXJjaGJhcixcclxuICBzd2l0Y2hGb3JlY2FzdCxcclxuICBkaXNwbGF5UHJlZmVyZW5jZXMsXHJcbiAgc2hvd0xvYWRpbmdTY3JlZW4sXHJcbiAgaGlkZUxvYWRpbmdTY3JlZW4sXHJcbiAgc2hvd1NlYXJjaEVycm9yLFxyXG4gIGhpZGVTZWFyY2hFcnJvcixcclxufTtcclxuIiwiY29uc3QgQVBJX0tFWSA9ICc1NzQ2ODU0ZTk4NGM0ZWFhYTA1NDQ5MTcyMzE0MDknO1xyXG5jb25zdCBBUElfVVJMID0gJ2h0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxJztcclxuY29uc3QgQVBJX01FVEhPRCA9ICdmb3JlY2FzdC5qc29uJztcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFdlYXRoZXJJbmZvcm1hdGlvbihwbGFjZSwgZGF5cyA9ICc1Jykge1xyXG4gIC8vIHRyeSB7XHJcbiAgY29uc3QgdXJsID0gYCR7QVBJX1VSTH0vJHtBUElfTUVUSE9EfT9rZXk9JHtBUElfS0VZfSZxPSR7cGxhY2V9JmRheXM9JHtkYXlzfWA7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKTtcclxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgLy8gV2VhdGhlciBsb2NhdGlvblxyXG4gIGNvbnN0IHsgbG9jYXRpb24gfSA9IGRhdGE7XHJcblxyXG4gIC8vIFdlYXRoZXIgY3VycmVudFxyXG4gIGNvbnN0IGRhdGFDdXJyZW50ID0gZGF0YS5jdXJyZW50O1xyXG4gIGNvbnN0IGN1cnJlbnQgPSB7XHJcbiAgICB0ZW1wX2M6IGRhdGFDdXJyZW50LnRlbXBfYyxcclxuICAgIHRlbXBfZjogZGF0YUN1cnJlbnQudGVtcF9mLFxyXG4gICAgdGV4dDogZGF0YUN1cnJlbnQuY29uZGl0aW9uLnRleHQsXHJcbiAgICBpY29uOiBkYXRhQ3VycmVudC5jb25kaXRpb24uaWNvbixcclxuICAgIGh1bWlkaXR5OiBkYXRhQ3VycmVudC5odW1pZGl0eSxcclxuICAgIHV2OiBkYXRhQ3VycmVudC51dixcclxuICAgIHdpbmRfa3BoOiBkYXRhQ3VycmVudC53aW5kX2twaCxcclxuICAgIHdpbmRfbXBoOiBkYXRhQ3VycmVudC53aW5kX21waCxcclxuICB9O1xyXG5cclxuICAvLyBXZWF0aGVyIGZvcmVjYXN0XHJcbiAgY29uc3QgZGF0YUZvcmVjYXN0ID0gZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheTtcclxuICAvLyBXZWF0aGVyIGRhaWx5IGZvcmVjYXN0XHJcbiAgY29uc3QgZGFpbHlGb3JlY2FzdCA9IFtdO1xyXG4gIGRhdGFGb3JlY2FzdC5mb3JFYWNoKChkYXkpID0+IHtcclxuICAgIGNvbnN0IGRhdGEgPSB7XHJcbiAgICAgIGRhdGU6IGRheS5kYXRlLFxyXG4gICAgICBpY29uOiBkYXkuZGF5LmNvbmRpdGlvbi5pY29uLFxyXG4gICAgICB0ZW1wX2M6IGRheS5kYXkuYXZndGVtcF9jLFxyXG4gICAgICB0ZW1wX2Y6IGRheS5kYXkuYXZndGVtcF9mLFxyXG4gICAgfTtcclxuICAgIGRhaWx5Rm9yZWNhc3QucHVzaChkYXRhKTtcclxuICB9KTtcclxuXHJcbiAgLy8gV2VhdGhlciBob3VybHkgZm9yZWNhc3RcclxuICBjb25zdCBob3VybHlGb3JlY2FzdCA9IFtdO1xyXG4gIGZvciAobGV0IGkgPSAxOyBpIDw9IDI0OyBpKyspIHtcclxuICAgIGNvbnN0IGN1cnJlbnRIb3VyID0gcGFyc2VJbnQobmV3IERhdGUobG9jYXRpb24ubG9jYWx0aW1lKS5nZXRIb3VycygpKTtcclxuICAgIGxldCBob3VyID0gY3VycmVudEhvdXIgKyBpO1xyXG4gICAgbGV0IGlzTmV4dERheSA9IGZhbHNlO1xyXG4gICAgaWYgKGhvdXIgPiAyMykge1xyXG4gICAgICBob3VyIC09IDI0O1xyXG4gICAgICBpc05leHREYXkgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGhvdXJseUluZm8gPSBkYXRhRm9yZWNhc3RbaXNOZXh0RGF5ID8gMSA6IDBdLmhvdXJbaG91cl07XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IHtcclxuICAgICAgaG91cjogbmV3IERhdGUoaG91cmx5SW5mby50aW1lKS5nZXRIb3VycygpLFxyXG4gICAgICBpc19kYXk6IGhvdXJseUluZm8uaXNfZGF5LFxyXG4gICAgICBpY29uOiBob3VybHlJbmZvLmNvbmRpdGlvbi5pY29uLFxyXG4gICAgICB0ZW1wX2M6IGhvdXJseUluZm8udGVtcF9jLFxyXG4gICAgICB0ZW1wX2Y6IGhvdXJseUluZm8udGVtcF9mLFxyXG4gICAgfTtcclxuXHJcbiAgICBob3VybHlGb3JlY2FzdC5wdXNoKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgY29uc3Qgd2VhdGhlckluZm9ybWF0aW9uID0ge1xyXG4gICAgbG9jYXRpb24sXHJcbiAgICBjdXJyZW50LFxyXG4gICAgZGFpbHlGb3JlY2FzdCxcclxuICAgIGhvdXJseUZvcmVjYXN0LFxyXG4gIH07XHJcbiAgcmV0dXJuIHdlYXRoZXJJbmZvcm1hdGlvbjtcclxuICAvLyB9IGNhdGNoIChlKSB7XHJcbiAgLy8gICByZXR1cm4gZTtcclxuICAvLyB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IGdldFdlYXRoZXJJbmZvcm1hdGlvbiB9O1xyXG4iLCJpbXBvcnQgKiBhcyBWaWV3IGZyb20gJy4vZGlzcGxheUZ1bmN0aW9ucy5qcyc7XHJcbmltcG9ydCAqIGFzIE1vZGVsIGZyb20gJy4vYXBpRnVuY3Rpb25zLmpzJztcclxuXHJcbmNvbnN0IFBSRUZfVU5JVFMgPSBnZXRQcmVmZXJlbmNlcygpIHx8IFsnZicsICdtcGgnXTtcclxubGV0IGRlZmF1bHRGb3JlY2FzdE1vZGUgPSAnaG91cmx5JztcclxubGV0IGRlZmF1bHRQbGFjZSA9ICdTYWlnb24nO1xyXG5sZXQgd2VhdGhlckluZm9ybWF0aW9uO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlckluZm9ybWF0aW9uKGNpdHkpIHtcclxuICB3ZWF0aGVySW5mb3JtYXRpb24gPSBhd2FpdCBNb2RlbC5nZXRXZWF0aGVySW5mb3JtYXRpb24oY2l0eSk7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRpc3BsYXlXZWF0aGVyKGNpdHksIGZvcmVjYXN0TW9kZSkge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAoIWNpdHkpIGNpdHkgPSBkZWZhdWx0UGxhY2U7XHJcbiAgICBpZiAoIWZvcmVjYXN0TW9kZSkgZm9yZWNhc3RNb2RlID0gZGVmYXVsdEZvcmVjYXN0TW9kZTtcclxuXHJcbiAgICBWaWV3LnNob3dMb2FkaW5nU2NyZWVuKCk7XHJcbiAgICBhd2FpdCBnZXRXZWF0aGVySW5mb3JtYXRpb24oY2l0eSk7XHJcbiAgICBWaWV3LmhpZGVTZWFyY2hFcnJvcigpO1xyXG5cclxuICAgIFZpZXcuZGlzcGxheUxvY2F0aW9uKHdlYXRoZXJJbmZvcm1hdGlvbi5sb2NhdGlvbik7XHJcbiAgICBWaWV3LmRpc3BsYXlQcmVmZXJlbmNlcyhQUkVGX1VOSVRTKTtcclxuXHJcbiAgICBWaWV3LmRpc3BsYXlDdXJyZW50V2VhdGhlcih3ZWF0aGVySW5mb3JtYXRpb24uY3VycmVudCwgUFJFRl9VTklUUyk7XHJcbiAgICBWaWV3LmRpc3BsYXlBZGRpdGlvbmFsV2VhdGhlcih3ZWF0aGVySW5mb3JtYXRpb24uY3VycmVudCwgUFJFRl9VTklUUyk7XHJcblxyXG4gICAgaWYgKGZvcmVjYXN0TW9kZSA9PT0gJ2hvdXJseScpXHJcbiAgICAgIFZpZXcuZGlzcGxheUhvdXJseUZvcmVjYXN0KHdlYXRoZXJJbmZvcm1hdGlvbi5ob3VybHlGb3JlY2FzdCwgUFJFRl9VTklUUyk7XHJcbiAgICBlbHNlIGlmIChmb3JlY2FzdE1vZGUgPT09ICdkYWlseScpXHJcbiAgICAgIFZpZXcuZGlzcGxheURhaWx5Rm9yZWNhc3Qod2VhdGhlckluZm9ybWF0aW9uLmRhaWx5Rm9yZWNhc3QsIFBSRUZfVU5JVFMpO1xyXG4gICAgVmlldy5zd2l0Y2hGb3JlY2FzdChmb3JlY2FzdE1vZGUpO1xyXG4gIH0gY2F0Y2gge1xyXG4gICAgVmlldy5zaG93U2VhcmNoRXJyb3IoJ0xvY2F0aW9uIG5vdCBmb3VuZCcpO1xyXG4gIH1cclxuXHJcbiAgVmlldy5oaWRlTG9hZGluZ1NjcmVlbigpO1xyXG4gIFZpZXcucmVzZXRTZWFyY2hiYXIoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc3dpdGNoRm9yZWNhc3QocHJldmlvdXNNb2RlKSB7XHJcbiAgY29uc3QgbW9kZSA9IHByZXZpb3VzTW9kZSA9PT0gJ2RhaWx5JyA/ICdob3VybHknIDogJ2RhaWx5JztcclxuXHJcbiAgaWYgKG1vZGUgPT09ICdob3VybHknKVxyXG4gICAgVmlldy5kaXNwbGF5SG91cmx5Rm9yZWNhc3Qod2VhdGhlckluZm9ybWF0aW9uLmhvdXJseUZvcmVjYXN0LCBQUkVGX1VOSVRTKTtcclxuICBlbHNlIGlmIChtb2RlID09PSAnZGFpbHknKVxyXG4gICAgVmlldy5kaXNwbGF5RGFpbHlGb3JlY2FzdCh3ZWF0aGVySW5mb3JtYXRpb24uZGFpbHlGb3JlY2FzdCwgUFJFRl9VTklUUyk7XHJcblxyXG4gIFZpZXcuc3dpdGNoRm9yZWNhc3QobW9kZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN3aXRjaFByZWZlcmVuY2VzKG9wdGlvbiwgcHJldmlvdXNWYWx1ZSwgZm9yZWNhc3RNb2RlKSB7XHJcbiAgLy8gSGFuZGxlIGRhdGFcclxuICBzd2l0Y2ggKG9wdGlvbikge1xyXG4gICAgY2FzZSAndGVtcCc6XHJcbiAgICAgIFBSRUZfVU5JVFNbMF0gPSBwcmV2aW91c1ZhbHVlID09PSAnYycgPyAnZicgOiAnYyc7XHJcblxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ3ZlbCc6XHJcbiAgICAgIFBSRUZfVU5JVFNbMV0gPSBwcmV2aW91c1ZhbHVlID09PSAna3BoJyA/ICdtcGgnIDogJ2twaCc7XHJcbiAgICAgIGJyZWFrO1xyXG4gIH1cclxuXHJcbiAgLy8gQ2hhbmdlIFVJIChsZXQgVmlldyBkbyB0aGUgdGhpbmcpXHJcbiAgVmlldy5kaXNwbGF5UHJlZmVyZW5jZXMoUFJFRl9VTklUUyk7XHJcbiAgVmlldy5kaXNwbGF5Q3VycmVudFdlYXRoZXIod2VhdGhlckluZm9ybWF0aW9uLmN1cnJlbnQsIFBSRUZfVU5JVFMpO1xyXG4gIFZpZXcuZGlzcGxheUFkZGl0aW9uYWxXZWF0aGVyKHdlYXRoZXJJbmZvcm1hdGlvbi5jdXJyZW50LCBQUkVGX1VOSVRTKTtcclxuXHJcbiAgaWYgKGZvcmVjYXN0TW9kZSA9PT0gJ2hvdXJseScpXHJcbiAgICBWaWV3LmRpc3BsYXlIb3VybHlGb3JlY2FzdCh3ZWF0aGVySW5mb3JtYXRpb24uaG91cmx5Rm9yZWNhc3QsIFBSRUZfVU5JVFMpO1xyXG4gIGVsc2UgaWYgKGZvcmVjYXN0TW9kZSA9PT0gJ2RhaWx5JylcclxuICAgIFZpZXcuZGlzcGxheURhaWx5Rm9yZWNhc3Qod2VhdGhlckluZm9ybWF0aW9uLmRhaWx5Rm9yZWNhc3QsIFBSRUZfVU5JVFMpO1xyXG5cclxuICAvLyBTYXZlIHRvIExvY2FsIFN0b3JhZ2VcclxuICBzYXZlUHJlZmVyZW5jZXMoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2F2ZVByZWZlcmVuY2VzKCkge1xyXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwcmVmVW5pdHMnLCBKU09OLnN0cmluZ2lmeShQUkVGX1VOSVRTKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFByZWZlcmVuY2VzKCkge1xyXG4gIGNvbnN0IHByZWZVbml0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3ByZWZVbml0cycpKTtcclxuICByZXR1cm4gcHJlZlVuaXRzO1xyXG59XHJcblxyXG5leHBvcnQge1xyXG4gIGdldFdlYXRoZXJJbmZvcm1hdGlvbixcclxuICBkaXNwbGF5V2VhdGhlcixcclxuICBzd2l0Y2hGb3JlY2FzdCxcclxuICBzd2l0Y2hQcmVmZXJlbmNlcyxcclxuICBzYXZlUHJlZmVyZW5jZXMsXHJcbiAgZ2V0UHJlZmVyZW5jZXMsXHJcbn07XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgdXNlZCAnbW9kdWxlJyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNDQpO1xuIl0sIm5hbWVzIjpbIndlYnBhY2tRdWV1ZXMiLCJ3ZWJwYWNrRXhwb3J0cyIsIndlYnBhY2tFcnJvciIsInJlc29sdmVRdWV1ZSIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIm9wdGlvbnMiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJsb2NhbHMiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwic2VhcmNoSW5wdXQiLCJzZWFyY2hJY29uIiwiZXJyb3JNc2ciLCJzd2l0Y2hGb3JlY2FzdCIsInByZWZlcmVuY2VPcHRpb25zIiwicXVlcnlTZWxlY3RvckFsbCIsImNvb3JkcyIsImxvY2F0aW9uIiwiZ2V0TG9jYXRpb24iLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsImNvbnNvbGUiLCJsb2ciLCJhc3luYyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwibmF2aWdhdG9yIiwiZ2VvbG9jYXRpb24iLCJnZXRDdXJyZW50UG9zaXRpb24iLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwia2V5IiwiZm9yZWNhc3RNb2RlIiwiZGF0YXNldCIsImNpdHkiLCJjdXJyZW50VGFyZ2V0IiwidmFsdWUiLCJmb3JFYWNoIiwib3B0aW9uIiwibmFtZSIsImRheXMiLCJtb250aHMiLCJjcmVhdGVGb3JlY2FzdEl0ZW0iLCJ0ZW1wIiwidGltZSIsImljb24iLCJkaXNwbGF5Q3VycmVudFdlYXRoZXIiLCJjdXJyZW50IiwicHJlZmVyZWRVbml0cyIsImN1cnJlbnRFbCIsInNyYyIsImN1cnJlbnRUZW1wIiwidGV4dENvbnRlbnQiLCJ0ZW1wX2YiLCJ0ZW1wX2MiLCJ0ZXh0IiwiZGlzcGxheUFkZGl0aW9uYWxXZWF0aGVyIiwiaHVtaWRpdHkiLCJ1diIsImN1cnJlbnRXaW5kU3BlZWQiLCJ3aW5kX2twaCIsIndpbmRfbXBoIiwiZGlzcGxheURhaWx5Rm9yZWNhc3QiLCJmb3JlY2FzdCIsImZvcmVjYXN0TGlzdCIsImlubmVySFRNTCIsImRheSIsImh0bWxMaSIsIkRhdGUiLCJkYXRlIiwiZ2V0RGF5IiwiZGlzcGxheUhvdXJseUZvcmVjYXN0IiwiaG91ciIsIm1vZGUiLCJzd2l0Y2hJbmRpY2F0b3IiLCJ0cmFuc2xhdGUiLCJkaXNwbGF5UHJlZmVyZW5jZXMiLCJzZXR0aW5nc01hcCIsImMiLCJmIiwia3BoIiwibXBoIiwiQVBJX0tFWSIsIkFQSV9VUkwiLCJBUElfTUVUSE9EIiwiUFJFRl9VTklUUyIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIndlYXRoZXJJbmZvcm1hdGlvbiIsImRlZmF1bHRGb3JlY2FzdE1vZGUiLCJkZWZhdWx0UGxhY2UiLCJkaXNwbGF5V2VhdGhlciIsInBsYWNlIiwidXJsIiwicmVzIiwiZmV0Y2giLCJqc29uIiwiZGF0YUN1cnJlbnQiLCJjb25kaXRpb24iLCJkYXRhRm9yZWNhc3QiLCJmb3JlY2FzdGRheSIsImRhaWx5Rm9yZWNhc3QiLCJhdmd0ZW1wX2MiLCJhdmd0ZW1wX2YiLCJob3VybHlGb3JlY2FzdCIsInBhcnNlSW50IiwibG9jYWx0aW1lIiwiZ2V0SG91cnMiLCJpc05leHREYXkiLCJob3VybHlJbmZvIiwiaXNfZGF5IiwibG9jYXRpb25FbCIsImNvdW50cnkiLCJsb2NhdGlvbkxvY2FsdGltZSIsImRhdGVPYmoiLCJnZXREYXRlIiwiZ2V0TW9udGgiLCJnZXRGdWxsWWVhciIsImVycm9yIiwicHJldmlvdXNNb2RlIiwic3dpdGNoUHJlZmVyZW5jZXMiLCJwcmV2aW91c1ZhbHVlIiwic2V0SXRlbSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJTeW1ib2wiLCJxdWV1ZSIsImQiLCJmbiIsInIiLCJhIiwiYm9keSIsImhhc0F3YWl0IiwiY3VycmVudERlcHMiLCJvdXRlclJlc29sdmUiLCJkZXBRdWV1ZXMiLCJTZXQiLCJwcm9taXNlIiwicmVqIiwieCIsImRlcHMiLCJkZXAiLCJ0aGVuIiwicmV0Iiwid3JhcERlcHMiLCJnZXRSZXN1bHQiLCJmblF1ZXVlIiwicSIsImhhcyIsImVyciIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiXSwic291cmNlUm9vdCI6IiJ9